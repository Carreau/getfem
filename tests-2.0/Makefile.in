# Makefile.in generated by automake 1.9.6 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@
srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
check_PROGRAMS = dynamic_array$(EXEEXT) dynamic_tas$(EXEEXT) \
	test_int_set$(EXEEXT) test_tree_sorted$(EXEEXT) poly$(EXEEXT) \
	test_small_vector$(EXEEXT) test_kdtree$(EXEEXT) \
	test_rtree$(EXEEXT) test_mesh$(EXEEXT) test_slice$(EXEEXT) \
	integration$(EXEEXT) geo_trans_inv$(EXEEXT) \
	test_mat_elem$(EXEEXT) test_interpolation$(EXEEXT) \
	test_assembly$(EXEEXT) test_norm$(EXEEXT) \
	test_interpolated_fem$(EXEEXT) laplacian$(EXEEXT) \
	elastostatic$(EXEEXT) stokes$(EXEEXT) helmholtz$(EXEEXT) \
	plate$(EXEEXT) nonlinear_elastostatic$(EXEEXT) \
	schwarz_additive$(EXEEXT) $(am__EXEEXT_1) plasticity$(EXEEXT) \
	dynamic_friction$(EXEEXT) bilaplacian$(EXEEXT)
subdir = tests-2.0
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_check_cxx_flag.m4 \
	$(top_srcdir)/m4/ax_prefix_config_h.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
@QHULL_TRUE@am__EXEEXT_1 = test_mesh_im_level_set$(EXEEXT)
am_bilaplacian_OBJECTS = bilaplacian.$(OBJEXT)
bilaplacian_OBJECTS = $(am_bilaplacian_OBJECTS)
bilaplacian_LDADD = $(LDADD)
am__DEPENDENCIES_1 =
bilaplacian_DEPENDENCIES = ../src/libgetfem.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_dynamic_array_OBJECTS = dynamic_array.$(OBJEXT)
dynamic_array_OBJECTS = $(am_dynamic_array_OBJECTS)
dynamic_array_LDADD = $(LDADD)
dynamic_array_DEPENDENCIES = ../src/libgetfem.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_dynamic_friction_OBJECTS = dynamic_friction.$(OBJEXT)
dynamic_friction_OBJECTS = $(am_dynamic_friction_OBJECTS)
dynamic_friction_LDADD = $(LDADD)
dynamic_friction_DEPENDENCIES = ../src/libgetfem.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_dynamic_tas_OBJECTS = dynamic_tas.$(OBJEXT)
dynamic_tas_OBJECTS = $(am_dynamic_tas_OBJECTS)
dynamic_tas_LDADD = $(LDADD)
dynamic_tas_DEPENDENCIES = ../src/libgetfem.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_elastostatic_OBJECTS = elastostatic.$(OBJEXT)
elastostatic_OBJECTS = $(am_elastostatic_OBJECTS)
elastostatic_LDADD = $(LDADD)
elastostatic_DEPENDENCIES = ../src/libgetfem.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_geo_trans_inv_OBJECTS = geo_trans_inv.$(OBJEXT)
geo_trans_inv_OBJECTS = $(am_geo_trans_inv_OBJECTS)
geo_trans_inv_LDADD = $(LDADD)
geo_trans_inv_DEPENDENCIES = ../src/libgetfem.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_helmholtz_OBJECTS = helmholtz.$(OBJEXT)
helmholtz_OBJECTS = $(am_helmholtz_OBJECTS)
helmholtz_LDADD = $(LDADD)
helmholtz_DEPENDENCIES = ../src/libgetfem.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_integration_OBJECTS = integration.$(OBJEXT)
integration_OBJECTS = $(am_integration_OBJECTS)
integration_LDADD = $(LDADD)
integration_DEPENDENCIES = ../src/libgetfem.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_laplacian_OBJECTS = laplacian.$(OBJEXT)
laplacian_OBJECTS = $(am_laplacian_OBJECTS)
laplacian_LDADD = $(LDADD)
laplacian_DEPENDENCIES = ../src/libgetfem.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_nonlinear_elastostatic_OBJECTS = nonlinear_elastostatic.$(OBJEXT)
nonlinear_elastostatic_OBJECTS = $(am_nonlinear_elastostatic_OBJECTS)
nonlinear_elastostatic_LDADD = $(LDADD)
nonlinear_elastostatic_DEPENDENCIES = ../src/libgetfem.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_plasticity_OBJECTS = plasticity.$(OBJEXT)
plasticity_OBJECTS = $(am_plasticity_OBJECTS)
plasticity_LDADD = $(LDADD)
plasticity_DEPENDENCIES = ../src/libgetfem.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_plate_OBJECTS = plate.$(OBJEXT)
plate_OBJECTS = $(am_plate_OBJECTS)
plate_LDADD = $(LDADD)
plate_DEPENDENCIES = ../src/libgetfem.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_poly_OBJECTS = poly.$(OBJEXT)
poly_OBJECTS = $(am_poly_OBJECTS)
poly_LDADD = $(LDADD)
poly_DEPENDENCIES = ../src/libgetfem.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_schwarz_additive_OBJECTS = schwarz_additive.$(OBJEXT)
schwarz_additive_OBJECTS = $(am_schwarz_additive_OBJECTS)
schwarz_additive_LDADD = $(LDADD)
schwarz_additive_DEPENDENCIES = ../src/libgetfem.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_stokes_OBJECTS = stokes.$(OBJEXT)
stokes_OBJECTS = $(am_stokes_OBJECTS)
stokes_LDADD = $(LDADD)
stokes_DEPENDENCIES = ../src/libgetfem.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_assembly_OBJECTS = test_assembly.$(OBJEXT)
test_assembly_OBJECTS = $(am_test_assembly_OBJECTS)
test_assembly_LDADD = $(LDADD)
test_assembly_DEPENDENCIES = ../src/libgetfem.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_int_set_OBJECTS = test_int_set.$(OBJEXT)
test_int_set_OBJECTS = $(am_test_int_set_OBJECTS)
test_int_set_LDADD = $(LDADD)
test_int_set_DEPENDENCIES = ../src/libgetfem.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_interpolated_fem_OBJECTS = test_interpolated_fem.$(OBJEXT)
test_interpolated_fem_OBJECTS = $(am_test_interpolated_fem_OBJECTS)
test_interpolated_fem_LDADD = $(LDADD)
test_interpolated_fem_DEPENDENCIES = ../src/libgetfem.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_interpolation_OBJECTS = test_interpolation.$(OBJEXT)
test_interpolation_OBJECTS = $(am_test_interpolation_OBJECTS)
test_interpolation_LDADD = $(LDADD)
test_interpolation_DEPENDENCIES = ../src/libgetfem.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_kdtree_OBJECTS = test_kdtree.$(OBJEXT)
test_kdtree_OBJECTS = $(am_test_kdtree_OBJECTS)
test_kdtree_LDADD = $(LDADD)
test_kdtree_DEPENDENCIES = ../src/libgetfem.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_mat_elem_OBJECTS = test_mat_elem.$(OBJEXT)
test_mat_elem_OBJECTS = $(am_test_mat_elem_OBJECTS)
test_mat_elem_LDADD = $(LDADD)
test_mat_elem_DEPENDENCIES = ../src/libgetfem.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_mesh_OBJECTS = test_mesh.$(OBJEXT)
test_mesh_OBJECTS = $(am_test_mesh_OBJECTS)
test_mesh_LDADD = $(LDADD)
test_mesh_DEPENDENCIES = ../src/libgetfem.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am__test_mesh_im_level_set_SOURCES_DIST = test_mesh_im_level_set.cc
@QHULL_TRUE@am_test_mesh_im_level_set_OBJECTS =  \
@QHULL_TRUE@	test_mesh_im_level_set.$(OBJEXT)
test_mesh_im_level_set_OBJECTS = $(am_test_mesh_im_level_set_OBJECTS)
test_mesh_im_level_set_LDADD = $(LDADD)
test_mesh_im_level_set_DEPENDENCIES = ../src/libgetfem.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_norm_OBJECTS = test_norm.$(OBJEXT)
test_norm_OBJECTS = $(am_test_norm_OBJECTS)
test_norm_LDADD = $(LDADD)
test_norm_DEPENDENCIES = ../src/libgetfem.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_rtree_OBJECTS = test_rtree.$(OBJEXT)
test_rtree_OBJECTS = $(am_test_rtree_OBJECTS)
test_rtree_LDADD = $(LDADD)
test_rtree_DEPENDENCIES = ../src/libgetfem.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_slice_OBJECTS = test_slice.$(OBJEXT)
test_slice_OBJECTS = $(am_test_slice_OBJECTS)
test_slice_LDADD = $(LDADD)
test_slice_DEPENDENCIES = ../src/libgetfem.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_small_vector_OBJECTS = test_small_vector.$(OBJEXT)
test_small_vector_OBJECTS = $(am_test_small_vector_OBJECTS)
test_small_vector_LDADD = $(LDADD)
test_small_vector_DEPENDENCIES = ../src/libgetfem.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_tree_sorted_OBJECTS = test_tree_sorted.$(OBJEXT)
test_tree_sorted_OBJECTS = $(am_test_tree_sorted_OBJECTS)
test_tree_sorted_LDADD = $(LDADD)
test_tree_sorted_DEPENDENCIES = ../src/libgetfem.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(bilaplacian_SOURCES) $(dynamic_array_SOURCES) \
	$(dynamic_friction_SOURCES) $(dynamic_tas_SOURCES) \
	$(elastostatic_SOURCES) $(geo_trans_inv_SOURCES) \
	$(helmholtz_SOURCES) $(integration_SOURCES) \
	$(laplacian_SOURCES) $(nonlinear_elastostatic_SOURCES) \
	$(plasticity_SOURCES) $(plate_SOURCES) $(poly_SOURCES) \
	$(schwarz_additive_SOURCES) $(stokes_SOURCES) \
	$(test_assembly_SOURCES) $(test_int_set_SOURCES) \
	$(test_interpolated_fem_SOURCES) $(test_interpolation_SOURCES) \
	$(test_kdtree_SOURCES) $(test_mat_elem_SOURCES) \
	$(test_mesh_SOURCES) $(test_mesh_im_level_set_SOURCES) \
	$(test_norm_SOURCES) $(test_rtree_SOURCES) \
	$(test_slice_SOURCES) $(test_small_vector_SOURCES) \
	$(test_tree_sorted_SOURCES)
DIST_SOURCES = $(bilaplacian_SOURCES) $(dynamic_array_SOURCES) \
	$(dynamic_friction_SOURCES) $(dynamic_tas_SOURCES) \
	$(elastostatic_SOURCES) $(geo_trans_inv_SOURCES) \
	$(helmholtz_SOURCES) $(integration_SOURCES) \
	$(laplacian_SOURCES) $(nonlinear_elastostatic_SOURCES) \
	$(plasticity_SOURCES) $(plate_SOURCES) $(poly_SOURCES) \
	$(schwarz_additive_SOURCES) $(stokes_SOURCES) \
	$(test_assembly_SOURCES) $(test_int_set_SOURCES) \
	$(test_interpolated_fem_SOURCES) $(test_interpolation_SOURCES) \
	$(test_kdtree_SOURCES) $(test_mat_elem_SOURCES) \
	$(test_mesh_SOURCES) \
	$(am__test_mesh_im_level_set_SOURCES_DIST) \
	$(test_norm_SOURCES) $(test_rtree_SOURCES) \
	$(test_slice_SOURCES) $(test_small_vector_SOURCES) \
	$(test_tree_sorted_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BLAS_LIBS = @BLAS_LIBS@
BUILDDATE = @BUILDDATE@
BUILDER = @BUILDER@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CONFIGURE_ARGS = @CONFIGURE_ARGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DISTCLEANMESH = @DISTCLEANMESH@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
F77 = @F77@
FC = @FC@
FCFLAGS = @FCFLAGS@
FCLIBS = @FCLIBS@
FFLAGS = @FFLAGS@
FLIBS = @FLIBS@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIBTOOL_DEPS = @LIBTOOL_DEPS@
LIBTOOL_VERSION_INFO = @LIBTOOL_VERSION_INFO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MPI_CLAGS = @MPI_CLAGS@
MPI_LIBS = @MPI_LIBS@
MUMPS_CFLAGS = @MUMPS_CFLAGS@
MUMPS_LIBS = @MUMPS_LIBS@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
QHULL_FALSE = @QHULL_FALSE@
QHULL_TRUE = @QHULL_TRUE@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
SUPERLU_CPPFLAGS = @SUPERLU_CPPFLAGS@
SUPLDFLAGS = @SUPLDFLAGS@
USEBLASLITE_FALSE = @USEBLASLITE_FALSE@
USEBLASLITE_TRUE = @USEBLASLITE_TRUE@
VERSION = @VERSION@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
ac_ct_FC = @ac_ct_FC@
ac_ct_RANLIB = @ac_ct_RANLIB@
ac_ct_STRIP = @ac_ct_STRIP@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
datadir = @datadir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
prefix = @prefix@
program_transform_name = @program_transform_name@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
@QHULL_FALSE@optprogs = 
@QHULL_TRUE@optprogs = test_mesh_im_level_set
@QHULL_FALSE@optpl = 
@QHULL_TRUE@optpl = $(top_srcdir)/tests/test_mesh_im_level_set.pl
CLEANFILES = \
	laplacian.res laplacian.mesh laplacian.dataelt \
	elasto_static.mesh test_mesh.mesh toto.mat test_mat_elem.mesh \
	helmholtz.vtk plate.mesh plate.vtk nonlinear_elastostatic.mesh \
	nonlinear_elastostatic.mf nonlinear_elastostatic.mfd \
	nonlinear_elastostatic.dx nonlinear_elastostatic.vtk \
	plasticity.mesh plasticity.U plasticity.sigmabar plasticity.vtk \
	plasticity.meshfem plasticity.coef elasto_static_err.vtk \
	ii_files/* auto_gmm* dyn*.txt

dynamic_array_SOURCES = dynamic_array.cc 
dynamic_tas_SOURCES = dynamic_tas.cc 
test_small_vector_SOURCES = test_small_vector.cc
test_kdtree_SOURCES = test_kdtree.cc
test_rtree_SOURCES = test_rtree.cc
test_assembly_SOURCES = test_assembly.cc
laplacian_SOURCES = laplacian.cc
plate_SOURCES = plate.cc
test_interpolation_SOURCES = test_interpolation.cc
elastostatic_SOURCES = elastostatic.cc
stokes_SOURCES = stokes.cc
nonlinear_elastostatic_SOURCES = nonlinear_elastostatic.cc
helmholtz_SOURCES = helmholtz.cc
integration_SOURCES = integration.cc
poly_SOURCES = poly.cc
test_mesh_SOURCES = test_mesh.cc
geo_trans_inv_SOURCES = geo_trans_inv.cc
test_int_set_SOURCES = test_int_set.cc
test_interpolated_fem_SOURCES = test_interpolated_fem.cc
test_tree_sorted_SOURCES = test_tree_sorted.cc
test_mat_elem_SOURCES = test_mat_elem.cc
test_slice_SOURCES = test_slice.cc
test_norm_SOURCES = test_norm.cc
schwarz_additive_SOURCES = schwarz_additive.cc
plasticity_SOURCES = plasticity.cc
@QHULL_TRUE@test_mesh_im_level_set_SOURCES = test_mesh_im_level_set.cc 
dynamic_friction_SOURCES = dynamic_friction.cc
bilaplacian_SOURCES = bilaplacian.cc
INCLUDES = -I$(top_srcdir)/src -I../src $(MUMPS_CFLAGS)
LDADD = ../src/libgetfem.la -lm $(MUMPS_LIBS) $(SUPLDFLAGS)

#plasticity_LDADD = ../src/libgetfem.la -lm @SUPLDFLAGS@ $(HOME)/source++/SuperLU/superlu.a -lblas -lg2c
#plasticity_INCLUDES = $(INCLUDES) -I$(HOME)/source++/SuperLU/
TESTS = \
	$(top_srcdir)/tests/dynamic_array.pl           \
	$(top_srcdir)/tests/dynamic_tas.pl             \
	$(top_srcdir)/tests/test_int_set.pl            \
	$(top_srcdir)/tests/test_tree_sorted.pl        \
	$(top_srcdir)/tests/poly.pl                    \
	$(top_srcdir)/tests/test_small_vector.pl       \
	$(top_srcdir)/tests/test_kdtree.pl             \
	$(top_srcdir)/tests/test_rtree.pl              \
	$(top_srcdir)/tests/geo_trans_inv.pl           \
	$(top_srcdir)/tests/test_norm.pl               \
	$(top_srcdir)/tests/test_mesh.pl               \
	$(top_srcdir)/tests/test_interpolation.pl      \
	$(top_srcdir)/tests/test_mat_elem.pl           \
	$(top_srcdir)/tests/test_slice.pl              \
	$(top_srcdir)/tests/integration.pl             \
	$(top_srcdir)/tests/test_assembly.pl           \
	$(top_srcdir)/tests/test_interpolated_fem.pl   \
	$(top_srcdir)/tests/laplacian.pl               \
	$(top_srcdir)/tests/elastostatic.pl            \
	$(top_srcdir)/tests/stokes.pl                  \
	$(top_srcdir)/tests/plate.pl                   \
	$(optpl)                                       \
	$(top_srcdir)/tests/nonlinear_elastostatic.pl  \
	$(top_srcdir)/tests/dynamic_friction.pl        \
	$(top_srcdir)/tests/plasticity.pl              \
	$(top_srcdir)/tests/helmholtz.pl               \
	$(top_srcdir)/tests/schwarz_additive.pl        \
	$(top_srcdir)/tests/bilaplacian.pl

EXTRA_DIST = \
	dynamic_array.pl                  \
	dynamic_tas.pl                    \
	test_small_vector.pl		  \
	test_kdtree.pl                    \
	test_rtree.pl                     \
	test_interpolation.pl             \
	test_assembly.pl                  \
	laplacian.pl                      \
	elastostatic.pl                   \
	stokes.pl                         \
	helmholtz.pl                      \
	integration.pl                    \
	poly.pl                           \
	test_mesh.pl                      \
	geo_trans_inv.pl                  \
	test_int_set.pl                   \
	test_interpolated_fem.pl          \
	test_slice.pl			  \
	test_norm.pl			  \
	test_mesh_im_level_set.pl         \
	test_tree_sorted.pl               \
	test_mat_elem.pl                  \
	laplacian.param                   \
	bilaplacian.param                 \
	bilaplacian.pl                    \
	plate.param                       \
	plate.pl                          \
	schwarz_additive.pl               \
	schwarz_additive.param            \
	elastostatic.param                \
	stokes.param                      \
	nonlinear_elastostatic.pl         \
	dynamic_friction.pl               \
	dynamic_friction.param            \
	plasticity.pl                     \
	nonlinear_elastostatic.param      \
	test_interpolated_fem.param       \
	geo_trans_inv.param

TESTS_ENVIRONMENT = perl
all: all-am

.SUFFIXES:
.SUFFIXES: .cc .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  tests-2.0/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  tests-2.0/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
bilaplacian$(EXEEXT): $(bilaplacian_OBJECTS) $(bilaplacian_DEPENDENCIES) 
	@rm -f bilaplacian$(EXEEXT)
	$(CXXLINK) $(bilaplacian_LDFLAGS) $(bilaplacian_OBJECTS) $(bilaplacian_LDADD) $(LIBS)
dynamic_array$(EXEEXT): $(dynamic_array_OBJECTS) $(dynamic_array_DEPENDENCIES) 
	@rm -f dynamic_array$(EXEEXT)
	$(CXXLINK) $(dynamic_array_LDFLAGS) $(dynamic_array_OBJECTS) $(dynamic_array_LDADD) $(LIBS)
dynamic_friction$(EXEEXT): $(dynamic_friction_OBJECTS) $(dynamic_friction_DEPENDENCIES) 
	@rm -f dynamic_friction$(EXEEXT)
	$(CXXLINK) $(dynamic_friction_LDFLAGS) $(dynamic_friction_OBJECTS) $(dynamic_friction_LDADD) $(LIBS)
dynamic_tas$(EXEEXT): $(dynamic_tas_OBJECTS) $(dynamic_tas_DEPENDENCIES) 
	@rm -f dynamic_tas$(EXEEXT)
	$(CXXLINK) $(dynamic_tas_LDFLAGS) $(dynamic_tas_OBJECTS) $(dynamic_tas_LDADD) $(LIBS)
elastostatic$(EXEEXT): $(elastostatic_OBJECTS) $(elastostatic_DEPENDENCIES) 
	@rm -f elastostatic$(EXEEXT)
	$(CXXLINK) $(elastostatic_LDFLAGS) $(elastostatic_OBJECTS) $(elastostatic_LDADD) $(LIBS)
geo_trans_inv$(EXEEXT): $(geo_trans_inv_OBJECTS) $(geo_trans_inv_DEPENDENCIES) 
	@rm -f geo_trans_inv$(EXEEXT)
	$(CXXLINK) $(geo_trans_inv_LDFLAGS) $(geo_trans_inv_OBJECTS) $(geo_trans_inv_LDADD) $(LIBS)
helmholtz$(EXEEXT): $(helmholtz_OBJECTS) $(helmholtz_DEPENDENCIES) 
	@rm -f helmholtz$(EXEEXT)
	$(CXXLINK) $(helmholtz_LDFLAGS) $(helmholtz_OBJECTS) $(helmholtz_LDADD) $(LIBS)
integration$(EXEEXT): $(integration_OBJECTS) $(integration_DEPENDENCIES) 
	@rm -f integration$(EXEEXT)
	$(CXXLINK) $(integration_LDFLAGS) $(integration_OBJECTS) $(integration_LDADD) $(LIBS)
laplacian$(EXEEXT): $(laplacian_OBJECTS) $(laplacian_DEPENDENCIES) 
	@rm -f laplacian$(EXEEXT)
	$(CXXLINK) $(laplacian_LDFLAGS) $(laplacian_OBJECTS) $(laplacian_LDADD) $(LIBS)
nonlinear_elastostatic$(EXEEXT): $(nonlinear_elastostatic_OBJECTS) $(nonlinear_elastostatic_DEPENDENCIES) 
	@rm -f nonlinear_elastostatic$(EXEEXT)
	$(CXXLINK) $(nonlinear_elastostatic_LDFLAGS) $(nonlinear_elastostatic_OBJECTS) $(nonlinear_elastostatic_LDADD) $(LIBS)
plasticity$(EXEEXT): $(plasticity_OBJECTS) $(plasticity_DEPENDENCIES) 
	@rm -f plasticity$(EXEEXT)
	$(CXXLINK) $(plasticity_LDFLAGS) $(plasticity_OBJECTS) $(plasticity_LDADD) $(LIBS)
plate$(EXEEXT): $(plate_OBJECTS) $(plate_DEPENDENCIES) 
	@rm -f plate$(EXEEXT)
	$(CXXLINK) $(plate_LDFLAGS) $(plate_OBJECTS) $(plate_LDADD) $(LIBS)
poly$(EXEEXT): $(poly_OBJECTS) $(poly_DEPENDENCIES) 
	@rm -f poly$(EXEEXT)
	$(CXXLINK) $(poly_LDFLAGS) $(poly_OBJECTS) $(poly_LDADD) $(LIBS)
schwarz_additive$(EXEEXT): $(schwarz_additive_OBJECTS) $(schwarz_additive_DEPENDENCIES) 
	@rm -f schwarz_additive$(EXEEXT)
	$(CXXLINK) $(schwarz_additive_LDFLAGS) $(schwarz_additive_OBJECTS) $(schwarz_additive_LDADD) $(LIBS)
stokes$(EXEEXT): $(stokes_OBJECTS) $(stokes_DEPENDENCIES) 
	@rm -f stokes$(EXEEXT)
	$(CXXLINK) $(stokes_LDFLAGS) $(stokes_OBJECTS) $(stokes_LDADD) $(LIBS)
test_assembly$(EXEEXT): $(test_assembly_OBJECTS) $(test_assembly_DEPENDENCIES) 
	@rm -f test_assembly$(EXEEXT)
	$(CXXLINK) $(test_assembly_LDFLAGS) $(test_assembly_OBJECTS) $(test_assembly_LDADD) $(LIBS)
test_int_set$(EXEEXT): $(test_int_set_OBJECTS) $(test_int_set_DEPENDENCIES) 
	@rm -f test_int_set$(EXEEXT)
	$(CXXLINK) $(test_int_set_LDFLAGS) $(test_int_set_OBJECTS) $(test_int_set_LDADD) $(LIBS)
test_interpolated_fem$(EXEEXT): $(test_interpolated_fem_OBJECTS) $(test_interpolated_fem_DEPENDENCIES) 
	@rm -f test_interpolated_fem$(EXEEXT)
	$(CXXLINK) $(test_interpolated_fem_LDFLAGS) $(test_interpolated_fem_OBJECTS) $(test_interpolated_fem_LDADD) $(LIBS)
test_interpolation$(EXEEXT): $(test_interpolation_OBJECTS) $(test_interpolation_DEPENDENCIES) 
	@rm -f test_interpolation$(EXEEXT)
	$(CXXLINK) $(test_interpolation_LDFLAGS) $(test_interpolation_OBJECTS) $(test_interpolation_LDADD) $(LIBS)
test_kdtree$(EXEEXT): $(test_kdtree_OBJECTS) $(test_kdtree_DEPENDENCIES) 
	@rm -f test_kdtree$(EXEEXT)
	$(CXXLINK) $(test_kdtree_LDFLAGS) $(test_kdtree_OBJECTS) $(test_kdtree_LDADD) $(LIBS)
test_mat_elem$(EXEEXT): $(test_mat_elem_OBJECTS) $(test_mat_elem_DEPENDENCIES) 
	@rm -f test_mat_elem$(EXEEXT)
	$(CXXLINK) $(test_mat_elem_LDFLAGS) $(test_mat_elem_OBJECTS) $(test_mat_elem_LDADD) $(LIBS)
test_mesh$(EXEEXT): $(test_mesh_OBJECTS) $(test_mesh_DEPENDENCIES) 
	@rm -f test_mesh$(EXEEXT)
	$(CXXLINK) $(test_mesh_LDFLAGS) $(test_mesh_OBJECTS) $(test_mesh_LDADD) $(LIBS)
test_mesh_im_level_set$(EXEEXT): $(test_mesh_im_level_set_OBJECTS) $(test_mesh_im_level_set_DEPENDENCIES) 
	@rm -f test_mesh_im_level_set$(EXEEXT)
	$(CXXLINK) $(test_mesh_im_level_set_LDFLAGS) $(test_mesh_im_level_set_OBJECTS) $(test_mesh_im_level_set_LDADD) $(LIBS)
test_norm$(EXEEXT): $(test_norm_OBJECTS) $(test_norm_DEPENDENCIES) 
	@rm -f test_norm$(EXEEXT)
	$(CXXLINK) $(test_norm_LDFLAGS) $(test_norm_OBJECTS) $(test_norm_LDADD) $(LIBS)
test_rtree$(EXEEXT): $(test_rtree_OBJECTS) $(test_rtree_DEPENDENCIES) 
	@rm -f test_rtree$(EXEEXT)
	$(CXXLINK) $(test_rtree_LDFLAGS) $(test_rtree_OBJECTS) $(test_rtree_LDADD) $(LIBS)
test_slice$(EXEEXT): $(test_slice_OBJECTS) $(test_slice_DEPENDENCIES) 
	@rm -f test_slice$(EXEEXT)
	$(CXXLINK) $(test_slice_LDFLAGS) $(test_slice_OBJECTS) $(test_slice_LDADD) $(LIBS)
test_small_vector$(EXEEXT): $(test_small_vector_OBJECTS) $(test_small_vector_DEPENDENCIES) 
	@rm -f test_small_vector$(EXEEXT)
	$(CXXLINK) $(test_small_vector_LDFLAGS) $(test_small_vector_OBJECTS) $(test_small_vector_LDADD) $(LIBS)
test_tree_sorted$(EXEEXT): $(test_tree_sorted_OBJECTS) $(test_tree_sorted_DEPENDENCIES) 
	@rm -f test_tree_sorted$(EXEEXT)
	$(CXXLINK) $(test_tree_sorted_LDFLAGS) $(test_tree_sorted_OBJECTS) $(test_tree_sorted_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bilaplacian.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dynamic_array.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dynamic_friction.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dynamic_tas.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/elastostatic.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/geo_trans_inv.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/helmholtz.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/integration.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/laplacian.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nonlinear_elastostatic.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/plasticity.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/plate.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/poly.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/schwarz_additive.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stokes.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_assembly.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_int_set.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_interpolated_fem.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_interpolation.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_kdtree.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_mat_elem.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_mesh.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_mesh_im_level_set.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_norm.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_rtree.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_slice.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_small_vector.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_tree_sorted.Po@am__quote@

.cc.o:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
@am__fastdepCXX_TRUE@	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list='$(TESTS)'; \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *" $$tst "*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		echo "XPASS: $$tst"; \
	      ;; \
	      *) \
		echo "PASS: $$tst"; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *" $$tst "*) \
		xfail=`expr $$xfail + 1`; \
		echo "XFAIL: $$tst"; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		echo "FAIL: $$tst"; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      echo "SKIP: $$tst"; \
	    fi; \
	  done; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="All $$all tests passed"; \
	    else \
	      banner="All $$all tests behaved as expected ($$xfail expected failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all tests failed"; \
	    else \
	      banner="$$failed of $$all tests did not behave as expected ($$xpass unexpected passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    skipped="($$skip tests were not run)"; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  echo "$$dashes"; \
	  echo "$$banner"; \
	  test -z "$$skipped" || echo "$$skipped"; \
	  test -z "$$report" || echo "$$report"; \
	  echo "$$dashes"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-TESTS check-am clean \
	clean-checkPROGRAMS clean-generic clean-libtool ctags \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-exec install-exec-am install-info \
	install-info-am install-man install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-info-am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
