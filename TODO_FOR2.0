Changement à prendre en considérations pour la 2.0 :

1  - Finaliser la parallelisation et la doc dessus. Pour la parallelistation
     avec MUMPS (et PARA_LEVEL >= 2) il faut voir le fonctionnement parallèle
     de Dirichlet_null_space et prévoir qlq chose pour que l'on puisse utiliser
     les matrices distribuées dans les programmes de tests. Il faut aussi
     paralleliser l'interpolation (san affecter la sauvegarde fait uniquement
     sur le processeur maitre).

2  - Finaliser le raffinement de maillage :
     documentation dessus. Estimateur a  posteriori basique : saut des
     derivées normales sur les arêtes.

3  - Brique generalized Dirichlet : la faire deriver de la brique constraints.

4  - Doc sur Xfem

5  - Faire un récapitulatif des cond de Dirichlet: inconvénients et
     avantages de chacune.

6  - Interfacer le maillage régulier avec read_from_file de mesh ?

7  - Améliorer la detection des bords pour qu'elle puisse optionellement
     faire la différence avec les non conformité intérieure d'un maillage.
     Pouvoir aussi détecter ces non conformité pour appliquer une condition
     de raccord. offrir des service standard, genre detection de bords par
     rapport à la normale au bord.

=======
8 - Dans mesh et mesh_fem, pour les recherche sur des résultats qui donnent de
	petits ensembles d'entier, preferer le std::vector<size_type> au
	dal::bit_vector ?


Questions en suspend :

1  - Faut-il revoir la gestion des erreurs (p.ex un seul type d'erreurs) ?

2  - Ajouter une option dans le .configure pour la version parallèle ?

3  - Reregarder la description des dof : trop complexe car on ne fait pas de
	produit tensoriels de ddl complexes ...

4  - Revoir la logique de l'utilisation des type size_type, scalar_type,
     opt_long_scalar_type ...

5  - Laisser tomber les méthodes d'intégration exactes ?

