Changement à prendre en considérations pour la 2.0 :

1  - Faut-il revoir la gestion des erreurs (p.ex un seul type d'erreurs) ?

2  - Refaire bgeot_simplexify et bgeot::convex_hull en interfaçant qhull ?
     inconvénient : lier un peu plus getfem à qhull. Une autre manière de
     régler le problème serait de remplacer le calcul de la simplexification
     des éléments de référence courant par une simplexification connue.

3  - simplifier standard solve avec des options pour la résolution. raffiner
     la stratégie du newton pour qu'il marche de manière optimale dans les deux
     cas : elas nonlin et friction. (en donnant le choix sur la recherche linéraire
     et le newton)

4  - Ajouter une option dans le .configure pour la version parallèle ?

5  - Finaliser la parallelisation et la doc dessus. Pour la parallelistation
     avec MUMPS (et PARA_LEVEL >= 2) il faut voir le fonctionnement parallèle
     de Dirichlet_null_space et prévoir qlq chose pour que l'on puisse utiliser
     les matrices distribuées dans les programmes de tests.

6  - Faut-il remmettre en question la repartion dal::, bgeot:: et getfem:: ?
     bgeot:: -> getfem:: ?

7  - Ajouter le raffinement de maillage à la bank (voir fichier TOBEDONE)

8  - Finaliser getfemlist.tex.

9  - Doc sur Xfem

10 - Brique generalized Dirichlet : la faire deriver de la brique constraints ?

11 - Reregarder la description des dof : trop complexe car on ne fait pas de
	produit tensoriels de ddl complexes ...

12 - Voir la logique de l'utilisation des type size_type, scalar_type,
     opt_long_scalar_type ...

13 - Licence de Superlu ?

14 - Implémenter l'élément Hdiv ?

15 - Implémenter l'élément composite C^1 ?

16 - Laisser tomber les méthodes d'intégration exactes ?

17 - Faire un récapitulatif des cond de Dirichlet: inconvénients et avantages de chacune.