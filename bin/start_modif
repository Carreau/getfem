#!/usr/bin/perl


$rootlib = `pwd`; chomp($rootlib);
$machine = `uname -m`; chomp($machine);
$systeme = `uname -s`; chomp($systeme); $systeme .= `uname -r`;chomp($systeme);
$getfem_lib = "libgetfem.a";

print "Building Makefile\n";
open(MAKEFILE, ">Makefile") or die "Open \'Makefile\' impossible : $!\n";
print MAKEFILE '# File automaticaly generated by start_modif', "\n\n\n";
# print MAKEFILE '# given options :', "\n";
# print MAKEFILE `more $foptions`, "\n";

print MAKEFILE "\n\n", '# principal paths and options:', "\n";

if ($systeme =~ /Linux/)
{
  print MAKEFILE "INCLUDES_GETFEM = -I/opt/getfem/include\n";
  print MAKEFILE "GETFEM_LIB = /opt/getfem/lib/libgetfem.a\n";
  print MAKEFILE "COMP = g++\n";
  print MAKEFILE "OPTIONS_STANDARD = -ainsi -ftemplate-depth-40\n";
  print MAKEFILE "OPTIONS_DEBUG    = -g\n";
  print MAKEFILE "OPTIONS_OPTIMIZE = -O3\n";
  print MAKEFILE "OPTIONS_BOTH     = -g -O3\n";
  print MAKEFILE "INCLUDES_STANDARD = \n";
  print MAKEFILE "INCLUDES_MTL = -I/opt/getfem/include\n";
  print MAKEFILE "INCLUDES_ITL = -I/opt/getfem/include\n";
  print MAKEFILE "LIB_X11 = -L/usr/X11R6/lib -lX11\n";
}
else
{
  print MAKEFILE "INCLUDES_GETFEM = -I/usr/local/getfem/include\n";
  print MAKEFILE "GETFEM_LIB = /usr/local/getfem/lib/libgetfem.a\n";
  print MAKEFILE "COMP = cxx\n";
  print MAKEFILE "OPTIONS_STANDARD = -ansi  -ptr $rootlib/cxx_repository\n";
  print MAKEFILE "OPTIONS_DEBUG    = -g\n";
  print MAKEFILE "OPTIONS_OPTIMIZE = -O3\n";
  print MAKEFILE "OPTIONS_BOTH     = -g3\n";
  print MAKEFILE "INCLUDES_STANDARD = \n";
  print MAKEFILE "INCLUDES_MTL = -I/usr/local/getfem/include\n";
  print MAKEFILE "INCLUDES_ITL = -I/usr/local/getfem/include\n";
  print MAKEFILE "LIB_X11 = -L/usr/X11R6/lib -lX11\n";
}

print MAKEFILE "CPLUS = \$(COMP) \$(OPTIONS_STANDARD) \$(OPTIONS_OPTIMIZE) \n";
print MAKEFILE "CPLUSDEBUG = \$(COMP) \$(OPTIONS_STANDARD)";
print MAKEFILE " \$(OPTIONS_DEBUG) \n";
print MAKEFILE "CPLUSOPTDEBUG = \$(COMP) \$(OPTIONS_STANDARD)";
print MAKEFILE " \$(OPTIONS_BOTH) \n";
print MAKEFILE "INCLUDES = -I ./include \$(INCLUDES_STANDARD) \$(INCLUDES_GETFEM) \$(INCLUDES_MTL)";
print MAKEFILE " \$(INCLUDES_ITL) -I$rootlib\/include \n\n\n";
print MAKEFILE "LIB = \$(GETFEM_LIB) \$(LIB_X11) -lm\n";

print MAKEFILE "\n\n", '# Objects to compile : ', "\n";

print MAKEFILE "lib_objects =";
$listeC = `ls sources/\*.C`;
$listeC =~ s/\@//g;
$listeo = $listeC; 
while($listeo)
{
  ($fi, $listeo) = split('\s', $listeo, 2);
  while ($fi =~ /\//) { ($fi2, $fi) = split('\/', $fi, 2); }
  $fi =~ s/\.C/\.o/;
  print MAKEFILE " sources\/", $fi;
}

print MAKEFILE "\n\n\n", "all : \$(lib_objects)\n\n";

print MAKEFILE "\n\n", '# Dependencies : ', "\n";
print MAKEFILE `bin/include_dependencies include`;


print MAKEFILE "\n\n", '# Compilation lines : ',  "\n";

while($listeC)
{
  ($fi, $listeC) = split('\s', $listeC, 2);
  $fi1 = $fi; $fi1 =~ s/\.C/\.o/;
  while ($fi1 =~ /\//) { ($fi2, $fi1) = split('\/', $fi1, 2); }
  $fi2 = $fi1;
  $fi2 =~ s/\.o/_h/;
#  $fi2 =~ s/\.o/.h/;
  print MAKEFILE "\n", "sources\/$fi1 : $fi \$($fi2)\n";
  print MAKEFILE "\t", '$(CPLUS) $(COPT)  -c $(INCLUDES) ', $fi, ' -o $@', "\n";

}

print MAKEFILE "\n\n", '# Compilation of test programs : ',  "\n";
$listeC = `ls programs/\*.C`;
$listeC =~ s/\@//g;
$listetests = "";
$listetestsex = "echo \"beginning tests\"";
while($listeC)
{
  ($fi, $listeC) = split('\s', $listeC, 2);
  $fi1 = $fi; $fi1 =~ s/\.C//;
  while ($fi1 =~ /\//) { ($fi2, $fi1) = split('\/', $fi1, 2); }
  $listetests = $listetests." "."programs\/$fi1";
  $listetestsex = $listetestsex."; "."programs\/$fi1";
  $fi2 = $fi1;
  $fi2 =~ s/\.o/_h/;
#  $fi2 =~ s/\.o/.h/;
  print MAKEFILE "\n", "programs\/$fi1 : $fi \$(GETFEM_LIB) .\/sources\/*.o \n";
  print MAKEFILE "\t", '$(CPLUS) $(COPT) $(INCLUDES) ./sources/*.o ', $fi, " -o programs\/$fi1", ' $(LIB) ', "\n";

}

print MAKEFILE "\n", 'test : ',  "\$(lib_objects) ", $listetests, "\n";
print MAKEFILE "\t", $listetestsex, "\n";

print MAKEFILE "\n\nclean :\n";
print MAKEFILE "\t \/bin\/rm -f sources\/\*.o sources\/\*.a\n";

close(MAKEFILE);


