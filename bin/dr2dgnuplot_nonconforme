#!/usr/bin/perl

open(DATAF, $ARGV[0]) or die "Open file impossible : $!\n";
open(TMPF, ">_tmp") or die "Open file impossible : $!\n";

$li = <DATAF>;
$li = <DATAF>;
$li = <DATAF>;

while ($li = <DATAF>)
{
  chomp($li);
  $c = 0;
  while ($li)
  { $cov[$c++] = $li; $li = <DATAF>; chomp($li); }

  if ($c == 3)  # P1
  {
    ($a0, $a1, $a2, $a3) = split(' ', $cov[0], 4);
    ($b0, $b1, $b2, $b3) = split(' ', $cov[1], 4);
    ($c0, $c1, $c2, $c3) = split(' ', $cov[2], 4);

    print TMPF $a0+$b0-$c0; print TMPF " ";
    print TMPF $a1+$b1-$c1; print TMPF " ";
    print TMPF $a2+$b2-$c2; print TMPF " ";
    print TMPF $a3+$b3-$c3; print TMPF "\n";
    print TMPF $a0-$b0+$c0; print TMPF " ";
    print TMPF $a1-$b1+$c1; print TMPF " ";
    print TMPF $a2-$b2+$c2; print TMPF " ";
    print TMPF $a3-$b3+$c3; print TMPF "\n";
    print TMPF -$a0+$b0+$c0; print TMPF " ";
    print TMPF -$a1+$b1+$c1; print TMPF " ";
    print TMPF -$a2+$b2+$c2; print TMPF " ";
    print TMPF -$a3+$b3+$c3; print TMPF "\n";
    print TMPF $a0+$b0-$c0; print TMPF " ";
    print TMPF $a1+$b1-$c1; print TMPF " ";
    print TMPF $a2+$b2-$c2; print TMPF " ";
    print TMPF $a3+$b3-$c3; print TMPF "\n\n";
  }
  elsif ($c == 6)  # P2
  {
    print TMPF "$cov[0]\n$cov[1]\n$cov[2]\n$cov[4]\n$cov[5]\n";
    print TMPF "$cov[3]\n$cov[0]\n\n";
  }
  elsif ($c == 10)  # P3
  {
    print TMPF "$cov[0]\n$cov[1]\n$cov[2]\n$cov[3]\n$cov[6]\n";
    print TMPF "$cov[8]\n$cov[9]\n$cov[7]\n$cov[4]\n$cov[0]\n\n";
  }
  elsif ($c == 15)  # P4
  {
    print TMPF "$cov[0]\n$cov[1]\n$cov[2]\n$cov[3]\n$cov[4]\n";
    print TMPF "$cov[8]\n$cov[11]\n$cov[13]\n$cov[14]\n$cov[12]\n";
    print TMPF "$cov[9]\n$cov[5]\n$cov[0]\n\n";
  }
  else { die "Unknown format with $c lines\n"; }

}

close(DATAF);
close(TMPF);

$muldep = $ARGV[1]; if (!$muldep) { $muldep = 1.0; }
open(GNF, ">_tmp2") or die "Open file impossible : $!\n";
print GNF "set data style line \n";
print GNF "plot \'_tmp\' using (\$1):(\$2) title \'maillage\',";
print GNF " \'_tmp\' using (\$1+\$3*$muldep):(\$2+\$4*$muldep) title \'solution\'\n";
print GNF "pause -1\n";
print GNF "set term postscript\n";
print GNF "set output \'$ARGV[0].ps\'\n";
print GNF "replot\n";
close(GNF);
`gnuplot _tmp2`;
`rm -f _tmp _tmp2`;
