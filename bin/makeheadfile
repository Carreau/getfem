#!/usr/bin/perl


sub clean_line {
  $_[0] =~ s/\/\*//g;
  $_[0] =~ s/\/\///g;
  chomp $_[0];
  $_[0] =~ s/\*\///g;
  $_[0] =~ s/^\s*//g;
  $_[0] =~ s/\s*$//g;
  $_[0] =~ s/=//g;
}

sub print_license  {

  my $RES   = $_[0];
  my $NAME = $_[1];

  print RES <<
//===========================================================================
//
// Copyright (C) $year1-$year2 $copyauth
//
// This file is a part of GETFEM++
//
// Getfem++  is  free software;  you  can  redistribute  it  and/or modify it
// under  the  terms  of the  GNU  Lesser General Public License as published
// by  the  Free Software Foundation;  either version 2.1 of the License,  or
// (at your option) any later version.
// This program  is  distributed  in  the  hope  that it will be useful,  but
// WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
// or  FITNESS  FOR  A PARTICULAR PURPOSE.  See the GNU Lesser General Public
// License for more details.
// You  should  have received a copy of the GNU Lesser General Public License
// along  with  this program;  if not, write to the Free Software Foundation,
// Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301, USA.
//

;
  if ($NAME =~ /\.h/) {
    print RES <<
// As a special exception, you  may use  this file  as it is a part of a free
// software  library  without  restriction.  Specifically,  if   other  files
// instantiate  templates  or  use macros or inline functions from this file,
// or  you compile this  file  and  link  it  with other files  to produce an
// executable, this file  does  not  by itself cause the resulting executable
// to be covered  by the GNU Lesser General Public License.  This   exception
// does not  however  invalidate  any  other  reasons why the executable file
// might be covered by the GNU Lesser General Public License.
//

;
  }
print RES <<
//===========================================================================

;
}


$year = `date +%Y`;
chomp $year;

while ($name = $ARGV[0]) {
  shift;
  open(FILE, "$name");



# extract information
  $license = 0;
  $libname = 0; $filename = 0; $date = 0; $author1 = 0; $year1 = 0;
  $comment1 = ""; $comment2 = ""; $author2=""; $author3=""; $copyauth="";
  $authors = $copyauth = "Yves Renard, Julien Pommier.";

  while ($li = <FILE>) {

    if ($li =~ /Copyright/ && !$year1) {
      ($li, $l1) = split('\)', $li, 2);
      clean_line($l1);
      $year1=int($l1);
      ($li, $l2) = split('\-', $l1, 2);
      $year2=int($l2);
      ($li, $copyauth) = split(' ', $l1, 2);
      $copyauth =~ s/\*\///g;
      clean_line($copyauth);
    }
    if ($li =~ /MERCHANTABILITY/) { $license = 1; }
    if (($license == 1) && ($li =~ /=========/)) { $li = <FILE>; last; }
    if ($li =~ /^#/) { last; }
  }

  $year2=$year;
  $enablecpp = "// -*- c++ -*- (enables emacs c++ mode)\n";

  if (!($license)) {
    $year1 = $year;
    $date = $year;
    $authors = $copyauth = "Yves Renard, Julien Pommier.";
    seek(FILE, 0, 0);
    # close(FILE);
    # open(FILE, "$name");
    open(RES, ">$name".".newhead");
    print RES $enablecpp;
    print_license(RES, $name);
  }
  else {

    if ($author3)
      { $authors = "$author1, $author2, $author3"; }
    elsif ($author2)
      { $authors = "$author1, $author2"; }
    else { $authors = "$author1"; }


    $filename = $name;

    open(RES, ">$name".".newhead");

    print RES $enablecpp;
    print_license(RES, $name);
  }


  do {
    # $li =~ s/\#include\ \<getfem(.*)\.h\>/\#include \"getfem$1\.h\"/g;
    # $li =~ s/\#include\ \<gmm(.*)\.h\>/\#include \"gmm$1\.h\"/g;
    # $li =~ s/\#include\ \<dal(.*)\.h\>/\#include \"dal$1\.h\"/g;
    # $li =~ s/\#include\ \<bgeot(.*)\.h\>/\#include \"bgeot$1\.h\"/g;

    #$li =~ s/\#include\ \"gmm(.*)\.h\"/\#include \"gmm\/gmm$1\.h\"/g;
    #$li =~ s/\#include\ \"getfem(.*)\.h\"/\#include \"getfem\/getfem$1\.h\"/g;
    #$li =~ s/\#include\ \"bgeot(.*)\.h\"/\#include \"getfem\/bgeot$1\.h\"/g;
    #$li =~ s/\#include\ \"dal(.*)\.h\"/\#include \"getfem\/dal$1\.h\"/g;

    print RES "$li";
  } while ($li = <FILE>);


  close(RES);
  close(FILE);

  `mv -f $name.newhead $name`;


}
