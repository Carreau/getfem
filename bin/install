#!/usr/bin/perl

## A faire : separer en deux : un qui fait les liens et l'autre qui fait
## le makefile.
## Pour le make file, gerer mieux les dependences avec les shell existants

#######################################
#       System identification         #
#######################################

$rootlib = `pwd`; chomp($rootlib);
$machine = `uname -m`; chomp($machine);
$systeme = `uname -s`; chomp($systeme); $systeme .= `uname -r`;chomp($systeme);
$getfem_lib = "libgetfem.a";


#######################################
#         Updating files              #
#######################################

print "\n\nMaking links\n";
`rm -fr include`;
`mkdir -p include`;
`cd include; ln -sf ../dal/*.h .; ln -sf ../bgeot/*.h .;  ln -sf ../linkmsg/*.h .;  ln -sf ../ftool/*.h .; ln -sf ../getfemlib/*.h .; ln -sf ../misc/*.h .; ln -sf ../misc/LEDAWIN/*.h .; ln -sf ../matlabint/*.h .; ln -sf ../gensolv/*.h .`; print "\n\n";
`rm -fr sources`;
`mkdir -p sources`;
`cd sources; ln -sf ../dal/*.C .; ln -sf ../bgeot/*.C .;  ln -sf ../ftool/*.C .; ln -sf ../getfemlib/*.C .; ln -sf ../misc/*.C .; ln -sf ../misc/LEDAWIN/*.C .; ln -sf ../matlabint/*.C .`; print "\n\n";
`mkdir -p lib`;


#######################################
#        Building Makefile            #
#######################################

print "Building Makefile\n";
open(MAKEFILE, ">Makefile") or die "Open \'Makefile\' impossible : $!\n";
print MAKEFILE '# File automaticaly generated by install', "\n\n\n";
# print MAKEFILE '# given options :', "\n";
# print MAKEFILE `more $foptions`, "\n";

print MAKEFILE "\n\n", '# principal paths and options:', "\n";

print MAKEFILE "INCLUDES_GETFEM = -I $rootlib/include\n";
print MAKEFILE "GETFEM_LIB = $rootlib/lib/libgetfem.a\n";

if ($systeme =~ /Linux/)
{
  print MAKEFILE "COMP = g++\n";
  print MAKEFILE "OPTIONS_STANDARD = -ftemplate-depth-40\n";
  print MAKEFILE "OPTIONS_STRICT = -pedantic\n";
  print MAKEFILE "OPTIONS_DEBUG    = -g\n";
  print MAKEFILE "OPTIONS_OPTIMIZE = -O3\n";
  print MAKEFILE "OPTIONS_BOTH     = -g -O3\n";
  print MAKEFILE "INCLUDES_STANDARD = -I/opt/matlab/extern/include \n";
  print MAKEFILE "INCLUDES_MTL = -I/opt/mtl/include\n";
  print MAKEFILE "INCLUDES_ITL = -I/opt/mtl/include\n";
  print MAKEFILE "LIB_X11 = -L/usr/X11R6/lib -lX11\n";
  $extmatcom = '.mexglx ';
}
else
{
  print MAKEFILE "COMP = cxx\n";
  print MAKEFILE "OPTIONS_STANDARD = -ptr $rootlib/cxx_repository\n";
  print MAKEFILE "OPTIONS_STRICT = -std strict_ansi -std strict_ansi_errors\n";
  print MAKEFILE "OPTIONS_DEBUG    = -g\n";
  print MAKEFILE "OPTIONS_OPTIMIZE = -O3\n";
  print MAKEFILE "OPTIONS_BOTH     = -g3\n";
  print MAKEFILE "INCLUDES_STANDARD =  -I/usr/local/matlab/extern/include \n";
  print MAKEFILE "INCLUDES_MTL = -I/usr/local/mtl/include\n";
  print MAKEFILE "INCLUDES_ITL = -I/usr/local/mtl/include\n";
  print MAKEFILE "LIB_X11 = -L/usr/X11R6/lib -lX11\n";
  $extmatcom = '.mexaxp ';
}

 print MAKEFILE "CPLUS = \$(COMP) \$(OPTIONS_STANDARD) \$(OPTIONS_OPTIMIZE) \n";
print MAKEFILE "CPLUSDEBUG = \$(COMP) \$(OPTIONS_STANDARD)";
print MAKEFILE " \$(OPTIONS_DEBUG) \n";
print MAKEFILE "CPLUSOPTDEBUG = \$(COMP) \$(OPTIONS_STANDARD)";
print MAKEFILE " \$(OPTIONS_BOTH) \n";
print MAKEFILE "INCLUDES = -I./include \$(INCLUDES_STANDARD) \$(INCLUDES_GETFEM) \$(INCLUDES_MTL)";
print MAKEFILE " \$(INCLUDES_ITL) \n\n\n";
print MAKEFILE "LIB = \$(GETFEM_LIB) \$(LIB_X11) -lm\n";

print MAKEFILE "\n\n", '# Objects to compile : ', "\n";

print MAKEFILE "lib_objects =";
$listeC = `ls sources/\*.C`;
$listeC =~ s/\@//g;
$listeo = $listeC; 
while($listeo)
{
  ($fi, $listeo) = split('\s', $listeo, 2);
  while ($fi =~ /\//) { ($fi2, $fi) = split('\/', $fi, 2); }
  $fi =~ s/\.C/\.o/;
  print MAKEFILE " sources\/", $fi;
}

print MAKEFILE "\n\n\n", "all : \$(GETFEM_LIB)\n\n";

print MAKEFILE "\n\n", '# Dependencies : ', "\n";
print MAKEFILE `bin/include_dependencies include`;


print MAKEFILE "\n\n", '# Compilation lines : ',  "\n";

while($listeC)
{
  ($fi, $listeC) = split('\s', $listeC, 2);
  $fi1 = $fi; $fi1 =~ s/\.C/\.o/;
  while ($fi1 =~ /\//) { ($fi2, $fi1) = split('\/', $fi1, 2); }
  $fi2 = $fi1;
  $fi2 =~ s/\.o/_h/;
#  $fi2 =~ s/\.o/.h/;
  print MAKEFILE "\n", "sources\/$fi1 : $fi \$($fi2)\n";
  if ($fi1 =~ /linear\_systems/) {
    print MAKEFILE "\t", '$(CPLUS) $(COPT) -c $(INCLUDES) ', $fi, ' -o $@', "\n"; }
  else {
    print MAKEFILE "\t", '$(CPLUS) $(COPT) $(OPTIONS_STRICT) -c $(INCLUDES) ', $fi, ' -o $@', "\n"; }
}

print MAKEFILE "\n\n", '# Compilation of test programs : ',  "\n";
$listeC = `ls tests/\*.C`;
$listeC =~ s/\@//g;
$listetests = "";
while($listeC)
{
  ($fi, $listeC) = split('\s', $listeC, 2);
  $fi1 = $fi; $fi1 =~ s/\.C//;
  while ($fi1 =~ /\//) { ($fi2, $fi1) = split('\/', $fi1, 2); }
  $listetests = $listetests." "."tests\/$fi1";
  $fi2 = $fi1;
  $fi2 =~ s/\.o/_h/;
#  $fi2 =~ s/\.o/.h/;
  print MAKEFILE "\n", "tests\/$fi1 : $fi \$(GETFEM_LIB) .\/sources\/*.o \n";
  print MAKEFILE "\t", '$(CPLUS) $(COPT) $(INCLUDES) ./sources/*.o ', $fi, " -o tests\/$fi1", ' $(LIB) ', "\n";

}

$listedotest = "echo \"beginning tests\" ; cd tests ; " . `cd tests ; ls *.dotest`
                                             . "echo \"tests finished\"";
$listedotest =~ s/\n/ ; /g;


print MAKEFILE "\n", 'test : ',  "\$(lib_objects) ", $listetests, "\n\n";
print MAKEFILE "\n", 'dotest : ',  "test \n";
print MAKEFILE "\t", $listedotest, "\n";

if (-d "matlabcom")
{
  $listeC = `ls matlabcom/\*.C`;
  $listeC =~ s/\@//g;
  $listeB = $listeC;
  $listeB =~ s/\.C/$extmatcom/g;
  $listeB =~ s/\n/ /g;
  $listeB =~ s/matlabcom\//lib\//g;
  print MAKEFILE "\n\n", 'matlabcom : lib/libgetfem.so ', $listeB, "\n\n";
  print MAKEFILE 'lib/libgetfem.so : ', " \$(GETFEM_LIB) .\/sources\/*.o \n";
  print MAKEFILE "\t ld", ' -shared sources/dal*.o sources/bgeot*.o sources/ftool*.o sources/getfem*.o sources/matlabint*.o -o lib/libgetfem.so', "\n\n";
# il faut moduler ça si tout n'est pas chargé ...

# il faudrait faire proprement les dépendences des Mex files.
  while($listeC)
  {
    ($fi, $listeC) = split('\s', $listeC, 2);
    $fi1 = $fi;
    $fi1 =~ s/\.C/$extmatcom/g;
    $fi1 =~ s/matlabcom\//lib\//g;
    print MAKEFILE "\n", "$fi1 : $fi \$(GETFEM_LIB) .\/sources\/*.o \n";
    print MAKEFILE "\t", 'cd lib; mex -O -I../include $(INCLUDES) ./libgetfem.so ';
    $fi1 =~ s/lib\///g;
    print MAKEFILE "..\/$fi -o $fi1\n";
  }

}


print MAKEFILE "\n\n\$(GETFEM_LIB) : \$(lib_objects)\n";
print MAKEFILE "\t ar r \$(GETFEM_LIB) \$(lib_objects) ; ranlib \$(GETFEM_LIB)\n";
print MAKEFILE "\n\nclean :\n";
print MAKEFILE "\t \/bin\/rm -f sources\/\*.o sources\/\*.a\n";


print MAKEFILE "\n\nclean :\n";
print MAKEFILE "\t \/bin\/rm -f sources\/\*.o sources\/\*.a\n";

close(MAKEFILE);


