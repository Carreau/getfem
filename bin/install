# -*- perl -*-
eval 'exec perl -S $0 "$@"'
  if 0;


#######################################
#       System identification         #
#######################################

$rootlib = `pwd`; chomp($rootlib);
$machine = `uname -m`; chomp($machine);
$systeme = `uname -s`; chomp($systeme);
$systeme .= " ".`uname -r`; chomp($systeme);
$getfem_lib = "libgetfem.a";

print "\n\nInstalling Getfem++ on system $systeme\n\n";


#######################################
#         Making links                #
#######################################

print "Making links\n";
`mkdir -p include`;
`mkdir -p sources`;
`mkdir -p lib`;

if (-d "dal") {
  `cd include; ln -sf ../dal/*.h .`;
  `cd sources; ln -sf ../dal/*.C .`;
}

if (-d "bgeot") {
  `cd include; ln -sf ../bgeot/*.h .`;
  `cd sources; ln -sf ../bgeot/*.C .`;
}

if (-d "linkmsg") {
  `cd include; ln -sf ../linkmsg/*.h .`;
}

if (-d "ftool") {
  `cd include; ln -sf ../ftool/*.h .`;
  `cd sources; ln -sf ../ftool/*.C .`;
}

if (-d "getfemlib") {
  `cd include; ln -sf ../getfemlib/*.h .`;
  `cd sources; ln -sf ../getfemlib/*.C .`;
}

if (-d "misc") {
  `cd include; ln -sf ../misc/*.h .`;
  `cd sources; ln -sf ../misc/*.C .`;
}

if (-d "misc/LEDAWIN") {
  `cd include; ln -sf ../misc/LEDAWIN/*.h .`;
  `cd sources; ln -sf ../misc/LEDAWIN/*.C .`;
}

if (-d "matlabint") {
  `cd include; ln -sf ../matlabint/*.h .`;
  `cd sources; ln -sf ../matlabint/*.C .`;
}

if (-d "gensolv") {
  `cd include; ln -sf ../gensolv/*.h .`;
}

# ne pa oublier de mettre à jour do_archive aussi en cas de modif ...

$liste = `ls include`; $liste =~ s/\@//g;
while($liste) {
  ($fi, $liste) = split('\s', $liste, 2);
  if (!(-s "include/".$fi)) { `rm -f include/$fi`; }
}
$liste = `ls sources`; $liste =~ s/\@//g;
while($liste) {
  ($fi, $liste) = split('\s', $liste, 2);
  if (!(-s "sources/".$fi)) { `rm -f sources/$fi`; }
}


#######################################
#        Compiler detection           #
#######################################

$CC = $ENV{CC};
if (! $CC) {
print "No compiler in CC variable, searching one\n";
`c++ -v`;     if ($? == 0) { print "a c++ is  detected\n"; $CC = "c++"; }
`bin/compilo_g++v g++`; if ($? == 0) { print "g++ detected\n"; $CC = "g++"; }
`bin/compilo_CCv`;  if ($? == 0) { print "CC  detected\n"; $CC = "CC";  }
`cxx -V`;           if ($? == 0) { print "cxx detected\n"; $CC = "cxx"; }
}

if (! $CC) { die "No compiler found, aborting\n"; }
else { print "$CC is selected.\nTo select another compiler set the variable CC\n\n"; }

#######################################
#        Searching MATLAB             #
#######################################

$MEX = 0;
$MATLABREP = "";

if (-d "matlabcom") {
  `mex -h`;
  if ($? != 0) {
    print "mex is not installed on your system (or is not accessible),\n";
    print "MATLAB command will not be compiled\n";
  }
  else {
    print "mex is present\n";
    $MEX = 1;
    $rep = `bin/compilo_mexv`;
    while($rep) {
      ($li, $rep) = split('\n', $rep, 2);
      if ($li =~ /MATLAB *\=/) {
	($li, $MATLABREP) = split('\=', $li, 2);
	print "Matlab found in path $MATLABREP\n";
      }
    }
  }
  $MATLABREP =~ s/\s//g;
}
# il faudrait verifier que c'est au moins la version 6 ...


#######################################
#        Building Makefile            #
#######################################

print "Building Makefile\n";
open(MAKEFILE, ">Makefile") or die "Open \'Makefile\' impossible : $!\n";
print MAKEFILE '# File automaticaly generated by install', "\n\n\n";
print MAKEFILE "\n\n", '# principal paths and options:', "\n";
print MAKEFILE "INCLUDES_GETFEM = -I$rootlib/include\n";
print MAKEFILE "GETFEM_LIB = $rootlib/lib/libgetfem.a\n";


if ($CC =~ /CC/) {
  $rep = `bin/compilo_CCv`;
  print "compiler version : $rep\n";
  print MAKEFILE "COMP = CC\n";
  print MAKEFILE "OPTIONS_STANDARD = \n";
  print MAKEFILE "OPTIONS_STRICT = -LANG:std \n";
  print MAKEFILE "OPTIONS_DEBUG    = -g\n";
  print MAKEFILE "OPTIONS_OPTIMIZE = -O3\n";
  print MAKEFILE "OPTIONS_BOTH     = -g3\n";
}
elsif ($CC =~ /cxx/) {
  $rep = `cxx -V`;
  print "compiler version : $rep\n";
  print MAKEFILE "COMP = cxx\n";
  print MAKEFILE "OPTIONS_STANDARD = -ptr $rootlib/cxx_repository\n";
  print MAKEFILE "OPTIONS_STRICT = -std strict_ansi -std strict_ansi_errors\n";
  print MAKEFILE "OPTIONS_DEBUG    = -g\n";
  print MAKEFILE "OPTIONS_OPTIMIZE = -O3\n";
  print MAKEFILE "OPTIONS_BOTH     = -g3\n";
}
elsif (($CC =~ /g\+\+/) || ($CC =~ /gcc/)) {
  $rep = `bin/compilo_g++v $CC`;
  ($a, $b) = split('version ', $rep, 2);
  ($a, $b, $c) = split('\.', $b, 3);
  ($c, $d) = split('\s', $c, 2);
  print "compiler version : $a.$b.$c\n";
  if ((($a < 3) && ($b < 90)) || ($a < 2)) {
    die "Compiler version older than 2.90, too old";
  }
  print MAKEFILE "COMP = $CC\n";
  print MAKEFILE "OPTIONS_STANDARD = -ftemplate-depth-40\n";
  print MAKEFILE "OPTIONS_STRICT = -pedantic\n";
  print MAKEFILE "OPTIONS_DEBUG    = -g\n";
  print MAKEFILE "OPTIONS_OPTIMIZE = -O3\n";
  print MAKEFILE "OPTIONS_BOTH     = -g -O3\n";
}
else { 
  print "unrecognized compiler, default options chosen\n"; 
  print MAKEFILE "COMP = $CC\n";
  print MAKEFILE "OPTIONS_STANDARD = \n";
  print MAKEFILE "OPTIONS_STRICT = \n";
  print MAKEFILE "OPTIONS_DEBUG    = -g\n";
  print MAKEFILE "OPTIONS_OPTIMIZE = -O3\n";
  print MAKEFILE "OPTIONS_BOTH     = -g -03\n";

}

if ($MEX == 0) {
  print MAKEFILE "INCLUDES_STANDARD = \n";
}
else {
  print MAKEFILE "INCLUDES_STANDARD = -I$MATLABREP/extern/include \n";
}
print MAKEFILE "LIB_X11 = -L/usr/X11R6/lib -lX11\n";

if ($systeme =~ /Linux/) {
  $extmatcom = 'mexglx ';
}
elsif ($systeme =~ /OSF/) {
  $extmatcom = 'mexaxp ';
}
elsif ($systeme =~ /Sun/) {
  $extmatcom = 'mexsol ';
}
elsif ($systeme =~ /IRIX/) {
  $extmatcom = 'mexsg ';
}
elsif ($systeme =~ /HP\-UX/) {
  $extmatcom = 'mexhpux ';
}
else { die "System unknown ..."; }

print MAKEFILE "CPLUS = \$(COMP) \$(OPTIONS_STANDARD) \$(OPTIONS_OPTIMIZE) \n";
print MAKEFILE "CPLUSDEBUG = \$(COMP) \$(OPTIONS_STANDARD)";
print MAKEFILE " \$(OPTIONS_DEBUG) \n";
print MAKEFILE "CPLUSOPTDEBUG = \$(COMP) \$(OPTIONS_STANDARD)";
print MAKEFILE " \$(OPTIONS_BOTH) \n";
print MAKEFILE "INCLUDES = -I./include \$(INCLUDES_STANDARD)";
print MAKEFILE "  \$(INCLUDES_GETFEM) \n\n\n";
print MAKEFILE "LIB = \$(GETFEM_LIB) \$(LIB_X11) -lm\n";

print MAKEFILE "\n\n", '# Objects to compile : ', "\n";

print MAKEFILE "lib_objects =";
$listeC = `ls sources/\*.C`;
$listeC =~ s/\@//g;
$listeo = $listeC; 
while($listeo)
{
  ($fi, $listeo) = split('\s', $listeo, 2);
  while ($fi =~ /\//) { ($fi2, $fi) = split('\/', $fi, 2); }
  $fi =~ s/\.C/\.o/;
  print MAKEFILE " sources\/", $fi;
}

print MAKEFILE "\n\n\n", "all : \$(GETFEM_LIB) lib/libgetfem.so\n\n";

print MAKEFILE "\n\n", '# Dependencies : ', "\n";
print MAKEFILE `bin/all_files_dependencies`;


print MAKEFILE "\n\n", '# Compilation lines : ',  "\n";

while($listeC)
{
  ($fi, $listeC) = split('\s', $listeC, 2);
  $fi1 = $fi; $fi1 =~ s/\.C/\.o/;
  while ($fi1 =~ /\//) { ($fi2, $fi1) = split('\/', $fi1, 2); }
  $fi2 = $fi1;
  $fi2 =~ s/\.o/_C/;
#  $fi2 =~ s/\.o/.h/;
  print MAKEFILE "\n", "sources\/$fi1 : \$($fi2)\n";
  print MAKEFILE "\t", '$(CPLUS) $(COPT) $(OPTIONS_STRICT) -c $(INCLUDES) ', $fi, ' -o $@', "\n";
}
if (-d "tests") {
  print MAKEFILE "\n\n", '# Compilation of test programs : ',  "\n";
  $listeC = `ls tests/\*.C`;
  $listeC =~ s/\@//g;
  $listetests = "";
  while($listeC) {
    ($fi, $listeC) = split('\s', $listeC, 2);
    $fi1 = $fi; $fi1 =~ s/\.C//;
    while ($fi1 =~ /\//) { ($fi2, $fi1) = split('\/', $fi1, 2); }
    $listetests = $listetests." "."tests\/$fi1";
    $fi2 = $fi1;
    $fi2 =~ s/\.o/_h/;
    #  $fi2 =~ s/\.o/.h/;
    print MAKEFILE "\n", "tests\/$fi1 : $fi \$(GETFEM_LIB) .\/sources\/*.o \n";
    print MAKEFILE "\t", '$(CPLUS) $(COPT) $(INCLUDES) ./sources/*.o ', $fi, " -o tests\/$fi1", ' $(LIB) ', "\n";
    
  }
  
  $listedotest = "echo \"beginning tests\" ; cd tests ; " . `cd tests ; ls *.dotest`. "echo \"tests finished\"";
  $listedotest =~ s/\n/ ; /g;
  
  print MAKEFILE "\n", 'test : ',  "\$(lib_objects) ", $listetests, "\n\n";
  print MAKEFILE "\n", 'dotest : ',  "test \n";
  print MAKEFILE "\t", $listedotest, "\n";
}

if ((-d "matlabcom") && ($MEX != 0))
{
  $listeC = `ls matlabcom/\*.C`;
  $listeC =~ s/\@//g;
  $listeB = $listeC;
  $listeB =~ s/\.C/.$extmatcom/g;
  $listeB =~ s/\n/ /g;
  $listeB =~ s/matlabcom\//lib\//g;
  print MAKEFILE "\n\n", 'matlabcom : ', $listeB, "\n\n";
  

  while($listeC)
  {
    ($fi, $listeC) = split('\s', $listeC, 2);
    $fi1 = $fi;
    $fi2 = $fi1;
    $fi2 =~ s/\.C/_C/;
    $fi2 =~ s/matlabcom\///g;
    $fi1 =~ s/\.C//g;
    $fi1 =~ s/matlabcom\//lib\//g;
    print MAKEFILE "\n", "$fi1.$extmatcom :  \$($fi2) \n";
    $fi1 =~ s/lib\///g;
    print MAKEFILE "\t", 'cd lib; $(CPLUS) $(COPT)  -c $(INCLUDES)', "..\/$fi -o $fi1.o; rm -f $fi1.$extmatcom", '; mex -O $(INCLUDES) libgetfem.so ', "..\/$fi -o $fi1\n";
  
  }
}

print MAKEFILE "\n\n\$(GETFEM_LIB) : \$(lib_objects)\n";
print MAKEFILE "\t ar -sr \$(GETFEM_LIB) \$(lib_objects)\n";
print MAKEFILE "\n\nlib/libgetfem.so : \$(lib_objects) \n";
  print MAKEFILE "\t rm -f lib/libgetfem.so; ", '$(CPLUS) -shared sources/dal*.o sources/bgeot*.o sources/ftool*.o sources/getfem*.o sources/matlabint*.o -o lib/libgetfem.so -lm', "\n\n";
print MAKEFILE "\n\nclean :\n";
print MAKEFILE "\t \/bin\/rm -f sources\/\*.o lib\/\*.a lib\/\*.so lib\/\*.$extmatcom\n";


close(MAKEFILE);


