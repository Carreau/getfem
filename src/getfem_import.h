// -*- c++ -*- (enables emacs c++ mode)
//========================================================================
//
// Library : GEneric Tool for Finite Element Methods (getfem)
// File    : getfem_import.h : misc. imports.
//           
// Date    : Januar 17, 2003.
// Author  : Julien Pommier <Julien.Pommier@insa-toulouse.fr>
//
//========================================================================
//
// Copyright (C) 2000-2005 Julien Pommier
//
// This file is a part of GETFEM++
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; version 2 of the License.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software Foundation,
// Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
//
//========================================================================

#ifndef GETFEM_IMPORT_H__
#define GETFEM_IMPORT_H__

#include <string>
#include <iostream>

namespace getfem {
  class getfem_mesh;

  /** imports a mesh file.
      format can be:
      - "gid" for meshes generated by GiD http://gid.cimne.upc.es/ 
         -- mesh nodes are always 3D
      - "gmsh" for meshes generated by GMSH http://www.geuz.org/gmsh/ 
       IMPORTANT NOTE: if you do not assign a physical surface/volume to your
       3D mesh, the file will also contain the mesh of the
       boundary (2D elements) and the boundary of the boundary (line
       elements!).
       getfem makes use of the physical "region" number stored with each element in the gmsh file
       to fill the corresponding region of the getfem_mesh object.

       For a mesh of dimension N, getfem builds a mesh with the
       convexes listed in the gmsh file whose dimension are N, the
       convexes of dim N-1 are used to tag "region" of faces,
       according to their gmsh "physical region number", and the
       convexes of lower dimension are ignored.

       Note that the mesh nodes are always 3D.

      - "am_fmt" for 2D meshes from emc2
        [http://pauillac.inria.fr/cdrom/prog/unix/emc2/eng.htm]
  */
  void import_mesh(const std::string& filename, const std::string& format,
		   getfem_mesh& m);
  void import_mesh(std::ifstream& f, const std::string& format,
		   getfem_mesh& m);
  void import_mesh(const std::string& filename, getfem_mesh& m);

  /** for gmsh and gid meshes, the mesh nodes are always 3D, so for a 2D mesh
      the z-component of nodes should be removed */
  void maybe_remove_last_dimension(getfem_mesh &mesh);
}
#endif /* GETFEM_IMPORT_H__  */
