%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% parameters for program dynamic Coulomb friction problem                 %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% pour l'animation (en sh):
%% for i in *.png; do convert $i `basename $i png`jpg; done
%% mencoder "mf://dyn*.jpg" -mf fps=25 -o output.avi -ovc lavc -lavcopts vcodec=mpeg4


%%%%% pde parameters :	        				      %%%%%
LX = 30.0;		% size in X.
LY = 30.0;	        % size in Y.
LZ = 30.0;		% size in Z.
%MU = 7700;	        % Lamé coefficient.
%LAMBDA = 11500;   	% Lamé coefficient.
MU = 1.;
LAMBDA = 1.;
FRICTION_COEF = 1.0;    % Friction coefficient.
PG = 0.0;
%PG = 9810; 		% gravitation constante (on earth) (mm/s^2).
%PG = 1000000; 		% gravitation constante (on jupiter !) (mm/s^2).
RHO = 6e-6;     	% "realistic" density for steel
T = 5.0;
DT = 0.0001;             % Time step

%%%%%   discretisation parameters  :                     	      %%%%%
MESH_TYPE = 'GT_PK(2,1)';         % linear triangles
% MESH_TYPE = 'GT_QK(3,1)'; % 
%MESH_TYPE = 'GT_PRISM(3,1)';     % 3D prisms
NX = 20;            	          % space step.
MESH_NOISE = 0;         % Set to one if you want to "shake" the mesh
RESIDU = 1E-8;     	% residu for Newton.
NOISY = 0;

SCHEME = 3; % 0 = theta-method, 1 = Newmark, 2 = middle point
            % 3 = middle point with modified contact forces
	    % 4 = Paoli-Schatzman scheme
	    % 5 = modified Paoli-Schatzman scheme

THETA = 1.0;
BETA = 1.0;
RESTIT = 1.0;           % Restitution coefficient for Paoli-Schatzman scheme
GAMMA=0.5;
NOCONTACT_MASS = 0;     % Suppress or not the mass of contact nodes
PERIODICITY=0;          % Periodic condition
DT_ADAPT = 0;           % Time step adaptation regarding the energy
R = 1.0;                % Augmentation parameter


DIRICHLET = 1;
DIRICHLET_RATIO = -0.005;   % parametre pour la condition de Dirichlet
INIT_VERT_SPEED = -100.0;  % Initial vertical velocity
INIT_VERT_POS = 1.0;       % Initial vertical position
FOUNDATION_HSPEED = 10.0;  % Horizontal velocity of the rigid foundation
STATIONARY = 1;            % Initial condition is the stationary solution ?
PERT_STATIONARY = 3.0;     % Perturbation on the initial velocity

FEM_TYPE = 'FEM_PK(2, 2)';     % Main FEM
DATA_FEM_TYPE = 'FEM_PK(2,2)'; % must be defined for non-Lagrangian main FEM
INTEGRATION = 'IM_TRIANGLE(6)'; % Quadrature rule
% INTEGRATION = 'IM_GAUSS_PARALLELEPIPED(3,6)'; % Quadrature rule

MESHNAME='splx:';

% MESHNAME='meshes/donut_regulier_8_elements_288ddl.mesh';
% MESHNAME='donut_regulier_64_elements_1920ddl.mesh';
% MESHNAME='donut_regulier_512_elements_13824ddl.mesh';

% MESHNAME='donut_regulier_32_elements.mesh';
% MESHNAME='donut_regulier_72_elements.mesh';
% MESHNAME='donut_regulier_128_elements.mesh';
% MESHNAME='donut_regulier_200_elements.mesh';
% MESHNAME='donut_regulier_288_elements.mesh';
% MESHNAME='donut_regulier_392_elements.mesh';
% MESHNAME='donut_regulier_512_elements.mesh';
% MESHNAME='donut_regulier_648_elements.mesh';
% MESHNAME='donut_regulier_800_elements.mesh';

%%%%% disque en P2 %%%%%
% MESHNAME='meshes/disc_P2_h11.mesh';
% MESHNAME='meshes/disc_P2_h8.mesh';
% MESHNAME='meshes/disc_P2_h6.mesh';
% MESHNAME='meshes/disc_P2_h4.mesh';
% MESHNAME='meshes/disc_P2_h2.mesh';
% MESHNAME='meshes/disc_P2_h1.mesh';
% MESHNAME='meshes/disc_P2_h0.5.mesh';
% MESHNAME='meshes/disc_P2_h0.3.mesh';




%%%%%   saving parameters                                             %%%%%
ROOTFILENAME = 'dynamic_friction2';     % Root of data files.
DX_EXPORT = 1; % export solution to an OpenDX file ?
DT_EXPORT = 0.002; % Time step for the export