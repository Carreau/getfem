% -*- matlab -*- (enables emacs matlab mode)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% parameters for program laplacian                                        %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

LX = 1.0; LY = LX; LZ = LX; % sizes of the domain.
INCLINE = 0;                % Incline of the mesh.
FT = 0.1;                   % parameter for the exact solution.
N = 2;                      % domain in dimension N
QUAD = 0;                   % use quadrilaterons or not
NX = 5;                      % space step.
MESH_NOISE = 0;             % Set to one if you want to "shake" the mesh

if (N == 1)
  FT = 5.0;
  MESH_TYPE = 'GT_PK(1,1)';       % segments
  FEM_TYPE = 'FEM_PK(1,2)';       % P1 for segments
%  FEM_TYPE = 'FEM_HERMITE_SEGMENT'; DATA_FEM_TYPE = 'FEM_PK(1,3)';
  INTEGRATION = 'IM_GAUSS1D(6)';  % Gauss-Legendre integration on segments
end

if (N == 2 && ~QUAD)
  FT = 1.0;
  MESH_TYPE = 'GT_PK(2,1)';       % triangles
  FEM_TYPE = 'FEM_PK(2,2)';       % P1 for triangles
  %FEM_TYPE = 'FEM_HERMITE_TRIANGLE'; DATA_FEM_TYPE = 'FEM_PK(2,2)';
  %FEM_TYPE = 'FEM_ARGYRIS'; DATA_FEM_TYPE = 'FEM_PK(2,2)';
  INTEGRATION = 'IM_TRIANGLE(9)'; % quadrature rule for polynomials up
                                  % to degree 6 on triangles
end

if (N == 2 && QUAD)
  FT = 1.0;
  if (MESH_NOISE)
    MESH_TYPE = 'GT_QK(2,1)';       % quadrilaterons
  else
    MESH_TYPE = 'GT_LINEAR_QK(2)';  % quadrilaterons (linear transformation)
  end
  FEM_TYPE = 'FEM_QK(2,2)';         % Q1 for quadrilaterons
%  FEM_TYPE = 'FEM_HERMITE_QUAD12()'; DATA_FEM_TYPE = 'FEM_QK(2,3)';
  INTEGRATION = 'IM_GAUSS_PARALLELEPIPED(2,6)';
end

if (N == 3 && ~QUAD)
  MESH_TYPE = 'GT_PK(3,1)';          % tetrahedrons
  FEM_TYPE = 'FEM_PK(3,1)';          % P1 for tetrahedrons
  INTEGRATION = 'IM_TETRAHEDRON(6)'; % quadrature rule for polynomials up
                                     % to degree 6 on tetrahedrons
end

if (N == 3 && QUAD)
  if (MESH_NOISE)
    MESH_TYPE = 'GT_QK(3,1)';       % hexahedrons
  else
    MESH_TYPE = 'GT_LINEAR_QK(3)';  % hexahedrons (linear transformation)
  end
  FEM_TYPE = 'FEM_QK(3,1)';         % Q1 for hexahedrons
  INTEGRATION = 'IM_GAUSS_PARALLELEPIPED(3,6)';
end


if (N > 3)
  error('Correct the parameter file for N > 3');
end

RESIDUAL = 1E-9;     	     % residual for conjugate gradient.
GENERIC_DIRICHLET = 1;       % Generic Dirichlet condition or not. 
                             % (required for non-lagrangian elts).
ROOTFILENAME = 'laplacian'   % Root of data files.

