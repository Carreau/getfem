% -*- matlab -*- (enables emacs matlab mode)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% parameters for program dynamic Coulomb friction problem                 %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

N = 2;
%%%%% pde parameters :	        				      %%%%%
MU = 7700;	        % Lamé coefficient.
LAMBDA = 11500;   	% Lamé coefficient.
R = 1;                  % Augmentation parameter
FRICTION_COEF = 0.1;    % Friction coefficient.

NOISY = 1;


if (N == 2)
  MESHNAME1='meshes/disc_with_a_hole.mesh';
  MESHNAME2='structured:GT="GT_PK(2,1)";ORG=[-0.5,0];SIZES=[1,0.1];NSUBDIV=[20,2]';
  FEM_TYPE = 'FEM_PK(2, 2)';      % Main FEM
  MULT_FEM_TYPE = 'FEM_PK(2, 1)'; % FEM for multipiers
  DATA_FEM_TYPE = 'FEM_PK(2, 2)'; % must be defined for non-Lagrangian main FEM
  INTEGRATION = 'IM_TRIANGLE(4)'; % Quadrature rule
end;

if (N == 3)
  error('to be completed');
  FEM_TYPE = 'FEM_PK(3, 2)';      % Main FEM
  MULT_FEM_TYPE = 'FEM_PK(3, 1)'; % FEM for multipiers
  DATA_FEM_TYPE = 'FEM_PK(3, 2)'; % must be defined for non-Lagrangian main FEM
  INTEGRATION = 'IM_TETRAHEDRON(4)'; % Quadrature rule
end;



%%%%%   saving parameters                                             %%%%%
ROOTFILENAME = 'dynamic_friction';     % Root of data files.
DX_EXPORT = 1; % export solution to an OpenDX file ?
DT_EXPORT = 0.001; % Time step for the export
COMPARE = 1;  % Convergence test to be done or not
REFROOTNAME = 'mixed_dynamic_friction_ref';
