% -*- matlab -*- (enables emacs matlab mode)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% parameters for program nonlinear elastostatic problem                   %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%% pde parameters (in mm):	        			      %%%%%

LX = 20;		% size in X.
LY = 10;	        % size in Y.
LZ = 10;		% size in Z.

LAW = 1;     % 0 : SaintVenant-Kirchhoff
             % 1 : SaintVenant-Kirchhoff+incompressibility
             % 2 : Ciarlet-Geymonat
             % 3 : Mooney-Rivlin (+incompressibility)
	     % 4 : Linear elasticity
	     % 5 : Linear elasticity + incompressibility

% for SaintVenant-Kirchhoff+incompressibility (in N/mm^2)
P1 = 1000;
P2 = 1000;

% for Mooney-Rivlin (in N/mm^2) %
%P1 = 2000;	        % First elastic coefficient.
%P2 = 20;   	        % Second elastic coefficient.
P3 = 200;   	        % Third elastic coefficient.

% Linear elasticity - Lame coefficients %
LAMBDA = 11500;
MU = 5;

FORCEX = 0;         % Amplitude of the volume force
FORCEY = 0;
FORCEZ = -0.00;

DIRICHLET_Y = -0.34;
DIRICHLET_X_SPEED = 13800;

FRICTION_COEFF = 1.0;
RHO = 0.0; %1.0E-6;	% Density of rubber in the case of dynamic

%%%%%   discretisation parameters  :   %%%%%
DELTAT = 2E-5; %1E-6;		% length of the time step

MESHFILENAME = 'gum_h_1.0_2.0.mesh';	% file with the mesh in the case that
							% it has to be loaded
MESH_TYPE = 'GT_PK(2,1)';         % linear triangles
NX = 20;            	          % space step.
NY = 10;

%NBREFINE = 1; 		% number of refinements in the right-bottom corner
LAYERX = 0.351;		% thickness of refined layers
LAYERY = 0.551;
LAYERX_FACT = 0.6;	% multiplication factors for successive refinements
LAYERY_FACT = 0.6;

MESH_NOISED = 0; % Set to one if you want to "shake" the mesh

FEM_TYPE = 'FEM_PK(2,2)';  	% P2 for triangles
%FEM_TYPE = 'FEM_PK_WITH_CUBIC_BUBBLE(2,1)';	% P1 for triangles enriched with bubbles
FEM_TYPE_P = 'FEM_PK(2,1)';  	% P1 for triangles

% DATA_FEM_TYPE must be defined if your main FEM is not Lagrangian
DATA_FEM_TYPE = 'FEM_PK(2,2)'

INTEGRATION = 'IM_TRIANGLE(6)'; % quadrature rule for polynomials up
                                % to degree 6 on triangles

%%%%%   solver parameters                                             %%%%%
DIRICHLET_VERSION = 0;	% via the Lagrange multipliers, needed for continuations

R = 1.0E-3; 	% Augmentation parameter for the contact and frictional condition
		% (influences convergence of the standard solver - newton_line_search)
ALPHA = 5.0E5;%1.0E7 	% Parameter for equalization of the "normal" and "tangential"
			% components of the test functions

NOCONTACT_MASS = 1;     % 0 : Normal mass matrix
                        % 1 : Suppress the mass of contact nodes
                        % 2 : Suppress the mass of contact nodes in y direction

RESIDUAL = 3E-8;     	% residual for iterative solvers
DIFFERENCE = 3E-7;	% difference of two forthcoming iteratives
ANGLE = 0.999; % 0.95;	% minimal value of cosine of the angle between tangents at
			% two forthcoming points
XI_END = 1.0;		% ending value of XI for continuations
DISTANCE = 1E-2;	% maximal distance between XI and XI_end to end with continuation
LIMIT = 1E-3;	% parameter characterizing the closedness of components of the test
			% functions to zero

MAXITER = 100;		% maximum iterations of the Newton method
MAXITER_CORR = 30;%500;%20;	% maximum iterations of the Newton correction
THRESHOLD_CORR = 20;%400;%10;	% threshold of iterations to increase the step length

STEP0 = 46;%43;	  	% number of the foregoing Newton step (which has to be loaded); 
			% in the case of 0, the method starts from the beginning
STEP0_CONT = 339;%645; 	% number of the foregoing continuation step (which has to be
			% loaded)
%X0_GIVEN = 1;		% if (STEP0_CONT == 0 && X0_GIVEN == 0), the solver starts with the
			% Newton method
%STEP_DEC = 2;		% decrease of the step to the initial step for the continuation
		% (0 for the last computed solution, 1 for the solution before it ...)
	
H = 3E-6;%0.00588267;	% actual step length
H_INIT = 3E-3;		% initial step length
H_MAX = 3E-2;		% maximal step length
H_MIN = 3E-6;		% minimal step length
H_INC = 1.3;		% scale factor for increasing the step length
H_DEC = 0.5;		% scale factor for decreasing the step length
H_CHANGE = 3E-4;	% step length for permitting a change of a character

NBSTEP = 60;		% number of time steps
NBSTEP_CONT = 341;%700;	% number of continuation steps

%%%%%   saving parameters                                             %%%%%
ROOTFILENAME = 'data/nonlinear_elastostatic';	% Root of data files.
VTK_EXPORT = 1 				% export solution to a .vtk file ?
NOISY = 1