% -*- matlab -*- (enables emacs matlab mode)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% parameters for program xfem_contact                                     %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

QUAD = 0;
N = 2;
RADIUS = 0.4;               % radius of the real circular domain.
LEVEL_SET_DEGREE = 1;       % Degree of the piecewise polynomial
                            % defining the level set.

if (N == 1) 
  MESH_FILE='structured:GT="GT_PK(1,1)";SIZES=[1];NOISED=0;NSUBDIV=[10]';
  IM = 'IM_GAUSS1D(6)';     % Integration method.
  IM_SIMPLEX = IM;          % Integration method on sub-triangles.
  FEM = 'FEM_PK(1,1)';      % Finite element method for the
                            % unknown.
  FEM_RHS = FEM;            % Finite element method for the rhs
  FEM_MULT = 'FEM_PK(1,1)'; % Finite element method for multipliers
end;

if (N == 2 && QUAD)
  MESH_FILE='structured:GT="GT_QK(2,1)";SIZES=[1,1];NOISED=0;NSUBDIV=[10,10]';
  IM = 'IM_GAUSS_PARALLELEPIPED(2,6)';        % Integration method.
  IM_SIMPLEX = 'IM_TRIANGLE(6)';   % Integration method on sub-triangles.
  FEM = 'FEM_QK(2,1)';      % Finite element method for the unknown.
  FEM_RHS = FEM;            % Finite element method for the rhs
  FEM_MULT = 'FEM_QK(2,1)'; % Finite element method for multipliers
end;

if (N == 2 && ~QUAD)
  MESH_FILE='structured:GT="GT_PK(2,1)";SIZES=[1,1];NOISED=0;NSUBDIV=[10,10]';
  IM = 'IM_TRIANGLE(6)';    % Integration method.
  IM_SIMPLEX = IM;          % Integration method on sub-triangles.
  FEM = 'FEM_PK(2,1)';      % Finite element method for the unknown.
  FEM_RHS = FEM;            % Finite element method for the rhs
  FEM_MULT = 'FEM_PK(2,1)'; % Finite element method for multipliers
end;

if (N > 2)
  error ('Adapt the paramer file first');
end;



%%%%%   saving parameters                                             %%%%%
ROOTFILENAME = 'xfem_contact';     % Root of data files.
VTK_EXPORT = 2 % export solution to a .vtk file ?
