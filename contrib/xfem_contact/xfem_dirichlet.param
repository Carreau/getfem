% -*- matlab -*- (enables emacs matlab mode)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% parameters for program xfem_dirichlet                                   %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

QUAD = 0;
N = 2;
RADIUS = 0.47;              % radius of the real circular domain.
LEVEL_SET_DEGREE = 4;      % Degree of the piecewise polynomial
                           % defining the level set.
EXACT_SOL = 1;             % Which exact solution.
			   
OK = 0;

if (N == 1) 
  MESH_FILE='structured:GT="GT_PK(1,1)";SIZES=[1];NOISED=0;NSUBDIV=[10]';
  IM = 'IM_GAUSS1D(6)';     % Integration method.
  IM_SIMPLEX = IM;          % Integration method on sub-triangles.
  FEM = 'FEM_PK(1,1)';      % Finite element method for the
                            % unknown.
  FEM_RHS = FEM;            % Finite element method for the rhs
  FEM_MULT = 'FEM_PK(1,1)'; % Finite element method for multipliers
  OK = 1;
end;

if (N == 2 && QUAD)
  MESH_FILE='structured:GT="GT_QK(2,1)";SIZES=[1,1];NOISED=0;NSUBDIV=[40,40]';
  IM = 'IM_GAUSS_PARALLELEPIPED(2,6)';        % Integration method.
  IM_SIMPLEX = 'IM_TRIANGLE(6)';   % Integration method on sub-triangles.
  FEM = 'FEM_QK(2,2)';      % Finite element method for the unknown.
  FEM_RHS = FEM;            % Finite element method for the rhs
  FEM_MULT = 'FEM_QK(2,1)'; % Finite element method for multipliers
  OK = 1;
end;

if (N == 2 && ~QUAD)
  MESH_FILE='structured:GT="GT_PK(2,1)";SIZES=[1,1];NOISED=0;NSUBDIV=[8,8]';
  IM = 'IM_STRUCTURED_COMPOSITE(IM_TRIANGLE(6),1)';    % Integration method.
  IM_SIMPLEX = 'IM_STRUCTURED_COMPOSITE(IM_TRIANGLE(6),1)';
  FEM = 'FEM_PK(2,4)';      % Finite element method for the unknown.
%  FEM = 'FEM_PK_WITH_CUBIC_BUBBLE(2,2)';
  FEM_RHS = 'FEM_PK(2,4)';  % Finite element method for the rhs
  FEM_MULT = 'FEM_PK(2,2)'; % Finite element method for multipliers
%  FEM_MULT = 'FEM_PK_DISCONTINUOUS(2,1)';
  OK = 1;
end;

if (N == 3 && ~QUAD)
  MESH_FILE='structured:GT="GT_PK(3,1)";SIZES=[1,1,1];NOISED=0;NSUBDIV=[3,3,3]';
  IM = 'IM_STRUCTURED_COMPOSITE(IM_TETRAHEDRON(6),1)';    % Integration method.
  IM_SIMPLEX = 'IM_STRUCTURED_COMPOSITE(IM_TETRAHEDRON(6),1)'; 
  FEM = 'FEM_PK(3,2)';      % Finite element method for the unknown.
  FEM_RHS = FEM;            % Finite element method for the rhs
  FEM_MULT = 'FEM_PK(3,1)'; % Finite element method for multipliers
   OK = 1;
end;

if (~OK)
  error ('Adapt the parameter file first');
end;



%%%%%   saving parameters                                             %%%%%
ROOTFILENAME = 'xfem_dirichlet';     % Root of data files.
VTK_EXPORT = 2 % export solution to a .vtk file ?
