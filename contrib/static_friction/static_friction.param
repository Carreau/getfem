% -*- matlab -*- (enables emacs matlab mode)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% parameters for program static Coulomb friction problem                  %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

LX = 1.0; LY = LX; LZ = LX;	% sizes of the domain.
MU = 5; LAMBDA = 10;    % Lamé coefficients (in N/mm^2, i.e. 5 and 10Mpa).
FRICTION_COEF = 0.0;    % Friction coefficient.
PG=9810;                % gravitation constante (on earth)
			% (in mm/s^2, i.e. 9.81m/s^2).
RHO = 6e-6;     	% "realistic" density for steel
                        % (in kg/mm^3, i.e. 6000kg/m^3)
N = 2;
NX = 40;            	% space step.
NOISY = 3;
MESH_NOISE = 0;         % Set to one if you want to "shake" the mesh
METHOD = 0;             % 0 = Newton.
			% 1 = Additive Schwarz Newton
if (METHOD == 1)
  SUBDOMSIZE = 0.6;
  OVERLAP = 0.4;
end

NEUMANN = 0;            % 0 = no non homogeneous Neumann Boundary
			% 1 = Non homogeneous Neumann Boudary on the top
NEUMANN_INTENSITY = 0;

DIRICHLET = 3;          % 0 = no Dirichlet boundary
			% 1 = Dirichlet boundary on the top
			% 2 = Dirichlet boundary on the left
			% 3 = no Dirichlet but suppress horizontal and rotating
			%     rigid motions (for semi-coercives problems).

DIRICHLET_RATIO = -.1; % parametre pour la condition de Dirichlet
CONTACT_CONDITION = 2;  % 0 = Condition almost conformal in u
			% 1 = Condition almost conformal in forces on contact
			%     boundary with FEM_TYPE_L for the multipliers
			% 2 = option 1 with additional Hansbo augmentation
			%     (only for the contact condition for the moment)
if (CONTACT_CONDITION == 2)
  GAMMA = 0.0001;       % Augmentation parameter for Hansbo method.
end

R = 100.0;              % Augmentation parameter
RESIDUAL = 1E-9;     	% residual for Newton.

if (N == 2)
  MESH_TYPE = 'GT_PK(2, 1)';      % linear triangles
  FEM_TYPE = 'FEM_PK(2, 2)';      % Main FEM
  FEM_TYPE_L = 'FEM_PK(2, 2)';    % FEM for the multipliers
  if 0
    DATA_FEM_TYPE = 'FEM_PK(2,1)';% for non-Lagrangian main FEM
  end;
  INTEGRATION = 'IM_TRIANGLE(6)'; % Quadrature rule
end;

if (N == 3)
  MESH_TYPE = 'GT_QK(3,1)';       % linear triangles
  FEM_TYPE = 'FEM_QK(3, 1)';      % Main FEM
  FEM_TYPE_L = 'FEM_QK(3, 1)';    % FEM fo the multipliers
  if 0
    DATA_FEM_TYPE = 'FEM_QK(3,1)';   % for non-Lagrangian main FEM
  end;
  INTEGRATION = 'IM_GAUSS_PARALLELEPIPED(3,6)'; % Quadrature rule
end;

% MESHNAME='splx:';

% MESHNAME='meshes/donut_regulier_8_elements_288ddl.mesh';
% MESHNAME='donut_regulier_64_elements_1920ddl.mesh';
% MESHNAME='donut_regulier_512_elements_13824ddl.mesh';

% MESHNAME='../../../tests/meshes/donut_regulier_32_elements.mesh';
% MESHNAME='../../../tests/meshes/donut_regulier_72_elements.mesh';
% MESHNAME='../../../tests/meshes/donut_regulier_128_elements.mesh';
% MESHNAME='../../../tests/meshes/donut_regulier_200_elements.mesh';
% MESHNAME='../../../tests/meshes/donut_regulier_288_elements.mesh';
% MESHNAME='../../../tests/meshes/donut_regulier_392_elements.mesh';
% MESHNAME='../../../tests/meshes/donut_regulier_512_elements.mesh';
% MESHNAME='../../../tests/meshes/donut_regulier_648_elements.mesh';
% MESHNAME='../../../tests/meshes/donut_regulier_800_elements.mesh';

%%%%% disque en P2 %%%%%
MESHNAME='../../../tests/meshes/disc_P2_h5.5.mesh';
% MESHNAME='../../../tests/meshes/disc_P2_h4.mesh';
% MESHNAME='../../../tests/meshes/disc_P2_h3.mesh';
% MESHNAME='../../../tests/meshes/disc_P2_h2.mesh';
% MESHNAME='../../../tests/meshes/disc_P2_h1.mesh';
% MESHNAME='../../../tests/meshes/disc_P2_h0.5.mesh';
% MESHNAME='../../../tests/meshes/disc_P2_h0.25.mesh';
MESHNAME='../../../tests/meshes/disc_P2_h0.15.mesh';
% MESHNAME='../../../tests/meshes/disc_P2_h0.075.mesh';

%%%%%   saving parameters                                             %%%%%
REFSOLFILENAME = 'reference_sol2d';
ROOTFILENAME = 'static_friction';     % Root of data files.
ML_EXPORT = 1; % export solution for Matlab
DX_EXPORT = 0; % export solution to an OpenDX file ?
