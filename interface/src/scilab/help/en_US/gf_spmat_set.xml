<?xml version="1.0" encoding="UTF-8"?>
<refentry version="5.0-subset Scilab" xml:id="gf_spmat_set" xml:lang="en"
          xmlns="http://docbook.org/ns/docbook"
          xmlns:xlink="http://www.w3.org/1999/xlink"
          xmlns:xi="http://www.w3.org/2001/XInclude"
          xmlns:svg="http://www.w3.org/2000/svg"
          xmlns:mml="http://www.w3.org/1998/Math/MathML"
          xmlns:html="http://www.w3.org/1999/xhtml"
          xmlns:db="http://docbook.org/ns/docbook">
  <refnamediv>
    <refname>gf_spmat_set</refname>

    <refpurpose>Modification of the content of a getfem sparse
    matrix.</refpurpose>
  </refnamediv>

  <refsynopsisdiv>
    <title>Calling Sequence</title>

    <synopsis>[...] = gf_spmat_set(M, args)  </synopsis>
  </refsynopsisdiv>

  <refsection>
    <title>Parameters</title>

    <variablelist>
      <varlistentry>
        <term></term>

        <listitem>
          <para></para>
        </listitem>
      </varlistentry>
    </variablelist>
  </refsection>

  <refsection>
    <title>Description</title>

    <itemizedlist>
      <listitem>
        <para>gf_spmat_set(M,'clear'[, list I[, list J]]) Erase the non-zero
        entries of the matrix. The optional arguments <literal>I</literal> and
        <literal>J</literal> may be specified to clear a sub-matrix instead of
        the entire matrix.</para>
      </listitem>

      <listitem>
        <para>gf_spmat_set(M,'scale',scalar v) Multiplies the matrix by a
        scalar value `v`.</para>
      </listitem>

      <listitem>
        <para>gf_spmat_set(M,'transpose') Transpose the matrix.</para>
      </listitem>

      <listitem>
        <para>gf_spmat_set(M,'conjugate') Conjugate each element of the
        matrix.</para>
      </listitem>

      <listitem>
        <para>gf_spmat_set(M,'transconj') Transpose and conjugate the
        matrix.</para>
      </listitem>

      <listitem>
        <para>gf_spmat_set(M,'to_csc') Convert the matrix to CSC storage. CSC
        storage is recommended for matrix-vector multiplications.</para>
      </listitem>

      <listitem>
        <para>gf_spmat_set(M,'to_wsc') Convert the matrix to WSC storage. Read
        and write operation are quite fast with WSC storage.</para>
      </listitem>

      <listitem>
        <para>gf_spmat_set(M,'to_wsc') Convert the matrix to WSC storage. Read
        and write operation are quite fast with WSC storage.</para>
      </listitem>

      <listitem>
        <para>gf_spmat_set(M,'diag',mat D [, ivec E]) Change the diagonal (or
        sub-diagonals) of the matrix. If <literal>E</literal> is given,
        <literal>D</literal> might be a matrix and each column of
        <literal>E</literal> will contain the sub-diagonal number that will be
        filled with the corresponding column of <literal>D</literal>.</para>
      </listitem>

      <listitem>
        <para>gf_spmat_set(M,'assign',ivec I, ivec J, mat V) Copy
        <literal>V</literal> into the sub-matrix 'M(I,J)'.
        <literal>V</literal> might be a sparse matrix or a full matrix.</para>
      </listitem>

      <listitem>
        <para>gf_spmat_set(M,'add',ivec I, ivec J, mat V) Add
        <literal>V</literal> to the sub-matrix 'M(I,J)'. <literal>V</literal>
        might be a sparse matrix or a full matrix.</para>
      </listitem>
    </itemizedlist>
  </refsection>

  <refsection>
    <title>Examples</title>

    <programlisting role="example"> 
  Add an example here
 </programlisting>
  </refsection>

  <refsection>
    <title>See Also</title>

    <simplelist type="inline">
      <member><link linkend="gf_spmat_get">gf_spmat_get</link></member>
    </simplelist>
  </refsection>

  <refsection>
    <title>Authors</title>

    <para>Y. Collette</para>
  </refsection>
</refentry>
