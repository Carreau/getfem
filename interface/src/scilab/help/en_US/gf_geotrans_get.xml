<?xml version="1.0" encoding="UTF-8"?>
<refentry version="5.0-subset Scilab" xml:id="gf_geotrans_get" xml:lang="en"
          xmlns="http://docbook.org/ns/docbook"
          xmlns:xlink="http://www.w3.org/1999/xlink"
          xmlns:xi="http://www.w3.org/2001/XInclude"
          xmlns:svg="http://www.w3.org/2000/svg"
          xmlns:mml="http://www.w3.org/1998/Math/MathML"
          xmlns:html="http://www.w3.org/1999/xhtml"
          xmlns:db="http://docbook.org/ns/docbook">
  <refnamediv>
    <refname>gf_geotrans_get</refname>

    <refpurpose>General function for querying information about geometric
    transformations objects.</refpurpose>
  </refnamediv>

  <refsynopsisdiv>
    <title>Calling Sequence</title>

    <synopsis>
int I = gf_geotrans_get(geotrans GT, 'dim')
int I = gf_geotrans_get(geotrans GT, 'is_linear')
int n = gf_geotrans_get(geotrans GT, 'nbpts')
mat P = gf_geotrans_get(geotrans GT, 'pts')
mat N = gf_geotrans_get(geotrans GT, 'normals')
mat Pts2 = gf_geotrans_get(geotrans GT, 'transform', G, Pts)
string s = gf_geotrans_get(geotrans GT, 'char')
</synopsis>
  </refsynopsisdiv>

  <refsection>
    <title>Description</title>

    <itemizedlist>
      <listitem>
        <para>d = gf_geotrans_get(GT,'dim'): Get the dimension of the GeoTrans.
        This is the dimension of the source space, i.e. the dimension of the
        reference convex.</para>
      </listitem>

      <listitem>
        <para>b = gf_geotrans_get(GT,'is_linear'): Return 0 if the GeoTrans is
        not linear.</para>
      </listitem>

      <listitem>
        <para>n = gf_geotrans_get(GT,'nbpts'): Return the number of points of
        the GeoTrans.</para>
      </listitem>

      <listitem>
        <para>P = gf_geotrans_get(GT,'pts'): Return the reference convex points
        of the GeoTrans. The points are stored in the columns of the output
        matrix.</para>
      </listitem>

      <listitem>
        <para>N = gf_geotrans_get(GT,'normals'): Get the normals for each face
        of the reference convex of the GeoTrans. The normals are stored in the
        columns of the output matrix.</para>
      </listitem>

      <listitem>
        <para>Po = gf_geotrans_get(GT,'poly_str'): Return the GeoTrans
        expressed as polynomials The result is expressed as a list of
        strings.</para>
      </listitem>

      <listitem>
        <para>Pt = gf_geotrans_get(GT,'transform',mat G, mat Pr): Apply the
        GeoTrans to a set of points. <literal>G</literal> is the set of
        vertices of the real convex, <literal>Pr</literal> is the set of
        points (in the reference convex) that are to be transformed. The
        corresponding set of points in the real convex is returned.</para>
      </listitem>

      <listitem>
        <para>s = gf_geotrans_get(GT,'char'): Output a (unique) string
        representation of the GeoTrans. This can be used to perform
        comparisons between two different GeoTrans objects.</para>
      </listitem>
    </itemizedlist>
  </refsection>

  <refsection>
    <title>Examples</title>

    <programlisting role="example"><![CDATA[ 
--> gt=gf_geotrans('GT_PK(2,1)'); gf_geotrans_get(gt,'pts')
ans =
     0     1     0
     0     0     1
--> gt=gf_geotrans('GT_QK(2,2)'); gf_geotrans_get(gt,'pts')
ans =
     0     0.5   1     0     0.5   1     0     0.5   1
     0     0     0     0.5   0.5   0.5   1     1     1
--> gf_geotrans_get(gt,'char')
ans =
GT_QK(2,2)
 ]]></programlisting>
  </refsection>

  <refsection>
    <title>See Also</title>

    <simplelist type="inline">
      <member><link linkend="gf_geotrans">gf_geotrans</link></member>
      <member><link linkend="gf_mesh_set">gf_mesh_set(M,'add convex')</link></member>
      <member><link linkend="gf_mesh_get">gf_mesh_get(M,'geotrans')</link></member>
    </simplelist>
  </refsection>

  <refsection>
    <title>Authors</title>

    <para>Y. Collette</para>
  </refsection>
</refentry>
