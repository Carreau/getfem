<?xml version="1.0" encoding="UTF-8"?>
<refentry version="5.0-subset Scilab" xml:id="gf_mesh_im_get" xml:lang="en"
          xmlns="http://docbook.org/ns/docbook"
          xmlns:xlink="http://www.w3.org/1999/xlink"
          xmlns:xi="http://www.w3.org/2001/XInclude"
          xmlns:svg="http://www.w3.org/2000/svg"
          xmlns:mml="http://www.w3.org/1998/Math/MathML"
          xmlns:html="http://www.w3.org/1999/xhtml"
          xmlns:db="http://docbook.org/ns/docbook">
  <refnamediv>
    <refname>gf_mesh_im_get</refname>

    <refpurpose>General function extracting information from mesh_im
    objects.</refpurpose>
  </refnamediv>

  <refsynopsisdiv>
    <title>Calling Sequence</title>

    <synopsis>[x] = gf_mesh_im_get(meshim MIM, operation [, args])</synopsis>
  </refsynopsisdiv>

  <refsection>
    <title>Parameters</title>

    <variablelist>
      <varlistentry>
        <term></term>

        <listitem>
          <para></para>
        </listitem>
      </varlistentry>
    </variablelist>
  </refsection>

  <refsection>
    <title>Description</title>

    <itemizedlist>
      <listitem>
        <para>list(I, CV2I) = gf_mesh_im_get(mim,'integ'[, mat CVids]) Return
        a list of integration methods used by the MeshIm. <literal>I</literal>
        is an array of all Integ objects found in the convexes given in
        <literal>CVids</literal>. If <literal>CV2I</literal> was supplied as
        an output argument, it contains, for each convex listed in
        <literal>CVids</literal>, the index of its correspounding integration
        method in <literal>I</literal>. Convexes which are not part of the
        mesh, or convexes which do not have any integration method have their
        correspounding entry in <literal>CV2I</literal> set to -1.</para>
      </listitem>

      <listitem>
        <para>CVids = gf_mesh_im_get(mim,'convex_index') Return the list of
        convexes who have a integration method. Convexes who have the dummy
        IM_NONE method are not listed.</para>
      </listitem>

      <listitem>
        <para>M = gf_mesh_im_get(mim,'eltm',Eltm em, int cv [int f]) Return
        the elementary matrix (or tensor) integrated on the convex
        <literal>cv</literal>. </para>

        <para>**WARNING** Be sure that the fem used for the construction of
        <literal>em</literal> is compatible with the fem assigned to element
        <literal>cv</literal> ! This is not checked by the function ! If the
        argument <literal>f</literal> is given, then the elementary tensor is
        integrated on the face <literal>f</literal> of <literal>cv</literal>
        instead of the whole convex.</para>
      </listitem>

      <listitem>
        <para>Ip = gf_mesh_im_get(mim,'im_nodes'[, mat CVids]) Return the
        coordinates of the integration points, with their weights.
        <literal>CVids</literal> may be a list of convexes, or a list of
        convex faces, such as returned by gf_mesh_get(M,'region')</para>
      </listitem>

      <listitem>
        <para>gf_mesh_im_get(mim,'save',string filename[, 'with mesh']) Saves
        a MeshIm in a text file (and optionaly its linked mesh object).</para>
      </listitem>

      <listitem>
        <para>gf_mesh_im_get(mim,'char'[,'with mesh']) Output a string
        description of the MeshIm. By default, it does not include the
        description of the linked Mesh object.</para>
      </listitem>

      <listitem>
        <para>m = gf_mesh_im_get(mim,'linked mesh') Returns a reference to the
        Mesh object linked to <literal>mim</literal>.</para>
      </listitem>

      <listitem>
        <para>z = gf_mesh_im_get(mim,'memsize') Return the amount of memory
        (in bytes) used by the MeshIm object. The result does not take into
        account the linked Mesh object.</para>
      </listitem>
    </itemizedlist>
  </refsection>

  <refsection>
    <title>Examples</title>

    <programlisting role="example"> 
cvid=gf_mesh_get(mim,'cvid');
[f,c2f]=gf_mesh_im_get(mim, 'integ');
sf = list();
for i=1:size(f), sf(i)=gf_integ_get('char',f(i)); end;
for i=1:size(c2f)
  disp(sprintf('the integration of convex %d is %s', cvid(i),sf(i)));
end
 </programlisting>
  </refsection>

  <refsection>
    <title>See Also</title>

    <simplelist type="inline">
      <member><link linkend="gf_mesh_im_set">gf_mesh_im_set</link></member>

      <member><link linkend="gf_mesh_im">gf_mesh_im</link></member>
    </simplelist>
  </refsection>

  <refsection>
    <title>Authors</title>

    <para>Y. Collette</para>
  </refsection>
</refentry>
