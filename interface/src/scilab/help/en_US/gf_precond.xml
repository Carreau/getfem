<?xml version="1.0" encoding="UTF-8"?>
<refentry version="5.0-subset Scilab" xml:id="gf_precond" xml:lang="en"
          xmlns="http://docbook.org/ns/docbook"
          xmlns:xlink="http://www.w3.org/1999/xlink"
          xmlns:xi="http://www.w3.org/2001/XInclude"
          xmlns:svg="http://www.w3.org/2000/svg"
          xmlns:mml="http://www.w3.org/1998/Math/MathML"
          xmlns:html="http://www.w3.org/1999/xhtml"
          xmlns:db="http://docbook.org/ns/docbook">
  <refnamediv>
    <refname>gf_precond</refname>

    <refpurpose>Create a preconditioner</refpurpose>
  </refnamediv>

  <refsynopsisdiv>
    <title>Calling Sequence</title>

    <synopsis>F=gf_precond(name_of_preconditioner, args)</synopsis>
  </refsynopsisdiv>

  <refsection>
    <title>Parameters</title>

    <variablelist>
      <varlistentry>
        <term></term>

        <listitem>
          <para></para>
        </listitem>
      </varlistentry>
    </variablelist>
  </refsection>

  <refsection>
    <title>Description</title>

    <para>The preconditioners may store REAL or COMPLEX values. They accept
    getfem sparse matrices and Scilab sparse matrices.</para>

    <itemizedlist>
      <listitem>
        <para>gf_precond('identity') Create a REAL identity
        precondioner.</para>
      </listitem>

      <listitem>
        <para>gf_precond('cidentity') Create a COMPLEX identity
        preconditioner.</para>
      </listitem>

      <listitem>
        <para>gf_precond('diagonal', vec D) Create a diagonal
        precondioner.</para>
      </listitem>

      <listitem>
        <para>gf_precond('ildlt', Spmat m) Create an ILDLT (Cholesky)
        preconditioner for the (symmetric) sparse matrix `m`. This
        preconditioner has the same sparsity pattern than `m` (no
        fill-in).</para>
      </listitem>

      <listitem>
        <para>gf_precond('ilu', Spmat m) Create an ILU (Incomplete LU)
        preconditioner for the sparse matrix `m`. This preconditioner has the
        same sparsity pattern than `m` (no fill-in).</para>
      </listitem>

      <listitem>
        <para>gf_precond('ildltt', Spmat m[, int fillin[, scalar threshold]])
        Create an ILDLT (Cholesky with filling) preconditioner for the
        (symmetric) sparse matrix `m`. The preconditioner may add at most
        `fillin` additional non-zero entries on each line. The default value
        for `fillin` is 10, and the default threshold is1e-7.</para>
      </listitem>

      <listitem>
        <para>gf_precond('ilut', Spmat m[, int fillin[, scalar threshold]])
        Create an ILUT (Incomplete LU with filling) preconditioner for the
        sparse matrix `m`. The preconditioner may add at most `fillin`
        additional non-zero entries on each line. The default value for
        `fillin` is 10, and the default threshold is 1e-7.</para>
      </listitem>

      <listitem>
        <para>gf_precond('superlu', Spmat m) Uses SuperLU to build an exact
        factorization of the sparse matrix `m`. This preconditioner is only
        available if the getfem-interface was built with SuperLU
        support</para>

        <para>Note that LU factorization is likely to eat all your memory for
        3D problems.</para>
      </listitem>

      <listitem>
        <para>gf_precond('spmat', Spmat M) ???</para>
      </listitem>
    </itemizedlist>
  </refsection>

  <refsection>
    <title>Examples</title>

    <programlisting role="example"> 
  Add an example here
 </programlisting>
  </refsection>

  <refsection>
    <title>See Also</title>

    <simplelist type="inline">
      <member><link linkend="gf_precond_get">gf_precond_get</link></member>
    </simplelist>
  </refsection>

  <refsection>
    <title>Authors</title>

    <para>Y. Collette</para>
  </refsection>
</refentry>
